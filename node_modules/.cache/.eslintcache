[{"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/index.js":"1","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/App.js":"2","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/api/server.js":"3","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/app/store.js":"4","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/app/Navbar.js":"5","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/PostsList.js":"6","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/EditPostForm.js":"7","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/AddPostForm.js":"8","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/SinglePostPage.js":"9","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/postsSlice.js":"10","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/users/usersSlice.js":"11","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/PostAuthor.js":"12","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/TimeAgo.js":"13","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/ReactionButtons.js":"14"},{"size":448,"mtime":1636053532921,"results":"15","hashOfConfig":"16"},{"size":995,"mtime":1634672081683,"results":"17","hashOfConfig":"16"},{"size":7730,"mtime":1634596526621,"results":"18","hashOfConfig":"16"},{"size":265,"mtime":1636054678711,"results":"19","hashOfConfig":"16"},{"size":420,"mtime":1643871776053,"results":"20","hashOfConfig":"16"},{"size":1078,"mtime":1634878050941,"results":"21","hashOfConfig":"16"},{"size":1687,"mtime":1634672354030,"results":"22","hashOfConfig":"16"},{"size":2106,"mtime":1634686036219,"results":"23","hashOfConfig":"16"},{"size":1464,"mtime":1634878017459,"results":"24","hashOfConfig":"16"},{"size":2732,"mtime":1634878418269,"results":"25","hashOfConfig":"16"},{"size":322,"mtime":1634688042531,"results":"26","hashOfConfig":"16"},{"size":291,"mtime":1634687921374,"results":"27","hashOfConfig":"16"},{"size":414,"mtime":1634690170655,"results":"28","hashOfConfig":"16"},{"size":728,"mtime":1634877664312,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1imb9z0",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/index.js",[],["60","61"],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/App.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/api/server.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/app/store.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/app/Navbar.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/PostsList.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/EditPostForm.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/AddPostForm.js",["62"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { nanoid } from '@reduxjs/toolkit'\nimport { postAdded } from './postsSlice'\n\nexport const AddPostForm = () => {\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n    const [userId, setUserId] = useState('')\n\n    const dispatch = useDispatch()\n\n    const users = useSelector(state => state.users)\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onContentChanged = e => setContent(e.target.value)\n    const onAuthorChanged = e => setUserId(e.target.value)\n    const onSavePostClicked = () => {\n        if (title && content) {\n            dispatch(postAdded(title, content, userId))\n            setTitle('')\n            setContent('')\n        }\n    }\n\n    const canSave = Boolean(title) && Boolean(content) && Boolean(userId)\n\n    const usersOptions = users.map(user=>(\n        <option key={user.id} value={user.id}>\n            {user.name}\n        </option>\n    ))\n    return (\n        <section>\n            <h2>Add a New Post </h2>\n            <form>\n                <label htmlFor=\"postTitle\"> Post Title: </label>\n                <input \n                type = 'text'\n                id=\"postTitle\"\n                name=\"postTitle\"\n                value = { title }\n                onChange={ onTitleChanged}\n                />\n                <label htmlFor=\"postAuthor\">Author:</label>\n                <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n                    <option value=\"\">\n                    </option>\n                    {usersOptions}\n                </select>\n                <label htmlFor=\"postContent\"> Content </label>\n                <textarea\n                id=\"postContent\"\n                name=\"postContent\"\n                value={content}\n                onChange={onContentChanged}\n                />\n                <button type=\"button\" onClick={onSavePostClicked} disabled={!canSave}> \n                    Save Post \n                </button>\n            </form>\n        </section>\n    )\n}","/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/SinglePostPage.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/postsSlice.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/users/usersSlice.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/PostAuthor.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/TimeAgo.js",[],"/Users/selamhabteab/Desktop/Projects/redux/community-board/src/features/posts/ReactionButtons.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":16},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'nanoid' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]