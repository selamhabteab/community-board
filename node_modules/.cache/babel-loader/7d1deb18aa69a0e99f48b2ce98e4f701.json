{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.stringComparators = void 0;\nexports.stringComparators = {\n  equals: function (expected, actual) {\n    return expected === actual;\n  },\n  notEquals: function (expected, actual) {\n    return !exports.stringComparators.equals(expected, actual);\n  },\n  contains: function (expected, actual) {\n    return actual.includes(expected);\n  },\n  notContains: function (expected, actual) {\n    return !exports.stringComparators.contains(expected, actual);\n  },\n  \"in\": function (expected, actual) {\n    return expected.includes(actual);\n  },\n  notIn: function (expected, actual) {\n    return !exports.stringComparators[\"in\"](expected, actual);\n  }\n};","map":{"version":3,"sources":["/Users/selamhabteab/Desktop/Projects/redux/community-board/node_modules/@mswjs/data/lib/comparators/string.js"],"names":["exports","__esModule","stringComparators","equals","expected","actual","notEquals","contains","includes","notContains","notIn"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;AACAF,OAAO,CAACE,iBAAR,GAA4B;AACxBC,EAAAA,MAAM,EAAE,UAAUC,QAAV,EAAoBC,MAApB,EAA4B;AAChC,WAAOD,QAAQ,KAAKC,MAApB;AACH,GAHuB;AAIxBC,EAAAA,SAAS,EAAE,UAAUF,QAAV,EAAoBC,MAApB,EAA4B;AACnC,WAAO,CAACL,OAAO,CAACE,iBAAR,CAA0BC,MAA1B,CAAiCC,QAAjC,EAA2CC,MAA3C,CAAR;AACH,GANuB;AAOxBE,EAAAA,QAAQ,EAAE,UAAUH,QAAV,EAAoBC,MAApB,EAA4B;AAClC,WAAOA,MAAM,CAACG,QAAP,CAAgBJ,QAAhB,CAAP;AACH,GATuB;AAUxBK,EAAAA,WAAW,EAAE,UAAUL,QAAV,EAAoBC,MAApB,EAA4B;AACrC,WAAO,CAACL,OAAO,CAACE,iBAAR,CAA0BK,QAA1B,CAAmCH,QAAnC,EAA6CC,MAA7C,CAAR;AACH,GAZuB;AAaxB,QAAM,UAAUD,QAAV,EAAoBC,MAApB,EAA4B;AAC9B,WAAOD,QAAQ,CAACI,QAAT,CAAkBH,MAAlB,CAAP;AACH,GAfuB;AAgBxBK,EAAAA,KAAK,EAAE,UAAUN,QAAV,EAAoBC,MAApB,EAA4B;AAC/B,WAAO,CAACL,OAAO,CAACE,iBAAR,CAA0B,IAA1B,EAAgCE,QAAhC,EAA0CC,MAA1C,CAAR;AACH;AAlBuB,CAA5B","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.stringComparators = void 0;\nexports.stringComparators = {\n    equals: function (expected, actual) {\n        return expected === actual;\n    },\n    notEquals: function (expected, actual) {\n        return !exports.stringComparators.equals(expected, actual);\n    },\n    contains: function (expected, actual) {\n        return actual.includes(expected);\n    },\n    notContains: function (expected, actual) {\n        return !exports.stringComparators.contains(expected, actual);\n    },\n    \"in\": function (expected, actual) {\n        return expected.includes(actual);\n    },\n    notIn: function (expected, actual) {\n        return !exports.stringComparators[\"in\"](expected, actual);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}