{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nexports.__esModule = true;\nexports.factory = void 0;\n\nvar glossary_1 = require(\"./glossary\");\n\nvar first_1 = require(\"./utils/first\");\n\nvar executeQuery_1 = require(\"./query/executeQuery\");\n\nvar parseModelDefinition_1 = require(\"./model/parseModelDefinition\");\n\nvar createModel_1 = require(\"./model/createModel\");\n\nvar invariant_1 = require(\"./utils/invariant\");\n\nvar updateEntity_1 = require(\"./model/updateEntity\");\n\nvar OperationError_1 = require(\"./errors/OperationError\");\n\nvar Database_1 = require(\"./db/Database\");\n\nvar generateRestHandlers_1 = require(\"./model/generateRestHandlers\");\n\nvar generateGraphQLHandlers_1 = require(\"./model/generateGraphQLHandlers\");\n\nvar sync_1 = require(\"./extensions/sync\");\n\nvar removeInternalProperties_1 = require(\"./utils/removeInternalProperties\");\n/**\n * Create a database with the given models.\n */\n\n\nfunction factory(dictionary) {\n  var db = new Database_1.Database(dictionary); // Jnitialize database extensions.\n\n  sync_1.sync(db);\n  return Object.entries(dictionary).reduce(function (acc, _a) {\n    var _b = __read(_a, 2),\n        modelName = _b[0],\n        props = _b[1];\n\n    acc[modelName] = createModelApi(dictionary, modelName, props, db);\n    return acc;\n  }, {});\n}\n\nexports.factory = factory;\n\nfunction createModelApi(dictionary, modelName, definition, db) {\n  var parsedModel = parseModelDefinition_1.parseModelDefinition(dictionary, modelName, definition);\n  var primaryKey = parsedModel.primaryKey;\n\n  if (typeof primaryKey === 'undefined') {\n    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.MissingPrimaryKey, \"Failed to create a \\\"\" + modelName + \"\\\" model: none of the listed properties is marked as a primary key (\" + Object.keys(definition).join() + \").\");\n  }\n\n  var api = {\n    create: function (initialValues) {\n      if (initialValues === void 0) {\n        initialValues = {};\n      }\n\n      var entity = createModel_1.createModel(modelName, definition, parsedModel, initialValues, db);\n      var entityId = entity[entity[glossary_1.InternalEntityProperty.primaryKey]];\n      invariant_1.invariant(!entityId, \"Failed to create a \\\"\" + modelName + \"\\\" entity: expected the primary key \\\"\" + primaryKey + \"\\\" to have a value, but got: \" + entityId, new OperationError_1.OperationError(OperationError_1.OperationErrorType.MissingPrimaryKey)); // Prevent creation of multiple entities with the same primary key value.\n\n      invariant_1.invariant(db.has(modelName, entityId), \"Failed to create a \\\"\" + modelName + \"\\\" entity: an entity with the same primary key \\\"\" + entityId + \"\\\" (\\\"\" + entity[glossary_1.InternalEntityProperty.primaryKey] + \"\\\") already exists.\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey));\n      db.create(modelName, entity);\n      return removeInternalProperties_1.removeInternalProperties(entity);\n    },\n    count: function (query) {\n      if (!query) {\n        return db.count(modelName);\n      }\n\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      return results.length;\n    },\n    findFirst: function (query) {\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var firstResult = first_1.first(results);\n      invariant_1.invariant(query.strict && !firstResult, \"Failed to execute \\\"findFirst\\\" on the \\\"\" + modelName + \"\\\" model: no entity found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n      return firstResult ? removeInternalProperties_1.removeInternalProperties(firstResult) : null;\n    },\n    findMany: function (query) {\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      invariant_1.invariant(query.strict && results.length === 0, \"Failed to execute \\\"findMany\\\" on the \\\"\" + modelName + \"\\\" model: no entities found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n      return results.map(removeInternalProperties_1.removeInternalProperties);\n    },\n    getAll: function () {\n      return db.listEntities(modelName).map(removeInternalProperties_1.removeInternalProperties);\n    },\n    update: function (_a) {\n      var strict = _a.strict,\n          query = __rest(_a, [\"strict\"]);\n\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var prevRecord = first_1.first(results);\n\n      if (!prevRecord) {\n        invariant_1.invariant(strict, \"Failed to execute \\\"update\\\" on the \\\"\" + modelName + \"\\\" model: no entity found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n        return null;\n      }\n\n      var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data);\n\n      if (nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]] !== prevRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]]) {\n        invariant_1.invariant(db.has(modelName, nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]]), \"Failed to execute \\\"update\\\" on the \\\"\" + modelName + \"\\\" model: the entity with a primary key \\\"\" + nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]] + \"\\\" (\\\"\" + primaryKey + \"\\\") already exists.\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey));\n      }\n\n      db.update(modelName, prevRecord, nextRecord);\n      return removeInternalProperties_1.removeInternalProperties(nextRecord);\n    },\n    updateMany: function (_a) {\n      var strict = _a.strict,\n          query = __rest(_a, [\"strict\"]);\n\n      var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var updatedRecords = [];\n\n      if (records.length === 0) {\n        invariant_1.invariant(strict, \"Failed to execute \\\"updateMany\\\" on the \\\"\" + modelName + \"\\\" model: no entities found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n        return null;\n      }\n\n      records.forEach(function (prevRecord) {\n        var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data);\n\n        if (nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]] !== prevRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]]) {\n          invariant_1.invariant(db.has(modelName, nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]]), \"Failed to execute \\\"updateMany\\\" on the \\\"\" + modelName + \"\\\" model: no entities found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n        }\n\n        db.update(modelName, prevRecord, nextRecord);\n        updatedRecords.push(nextRecord);\n      });\n      return updatedRecords.map(removeInternalProperties_1.removeInternalProperties);\n    },\n    \"delete\": function (_a) {\n      var strict = _a.strict,\n          query = __rest(_a, [\"strict\"]);\n\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var record = first_1.first(results);\n\n      if (!record) {\n        invariant_1.invariant(strict, \"Failed to execute \\\"delete\\\" on the \\\"\" + modelName + \"\\\" model: no entity found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n        return null;\n      }\n\n      db[\"delete\"](modelName, record[record[glossary_1.InternalEntityProperty.primaryKey]]);\n      return removeInternalProperties_1.removeInternalProperties(record);\n    },\n    deleteMany: function (_a) {\n      var strict = _a.strict,\n          query = __rest(_a, [\"strict\"]);\n\n      var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n\n      if (records.length === 0) {\n        invariant_1.invariant(strict, \"Failed to execute \\\"deleteMany\\\" on the \\\"\" + modelName + \"\\\" model: no entities found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n        return null;\n      }\n\n      records.forEach(function (record) {\n        db[\"delete\"](modelName, record[record[glossary_1.InternalEntityProperty.primaryKey]]);\n      });\n      return records.map(removeInternalProperties_1.removeInternalProperties);\n    },\n    toHandlers: function (type, baseUrl) {\n      if (type === 'graphql') {\n        return generateGraphQLHandlers_1.generateGraphQLHandlers(modelName, definition, api, baseUrl);\n      }\n\n      return generateRestHandlers_1.generateRestHandlers(modelName, definition, api, baseUrl);\n    },\n    toGraphQLSchema: function () {\n      return generateGraphQLHandlers_1.generateGraphQLSchema(modelName, definition, api);\n    }\n  };\n  return api;\n}","map":{"version":3,"sources":["/Users/selamhabteab/Desktop/Projects/redux/community-board/node_modules/@mswjs/data/lib/factory.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__read","o","n","m","Symbol","iterator","r","ar","next","done","push","value","error","exports","__esModule","factory","glossary_1","require","first_1","executeQuery_1","parseModelDefinition_1","createModel_1","invariant_1","updateEntity_1","OperationError_1","Database_1","generateRestHandlers_1","generateGraphQLHandlers_1","sync_1","removeInternalProperties_1","dictionary","db","Database","sync","entries","reduce","acc","_a","_b","modelName","props","createModelApi","definition","parsedModel","parseModelDefinition","primaryKey","OperationError","OperationErrorType","MissingPrimaryKey","keys","join","api","create","initialValues","entity","createModel","entityId","InternalEntityProperty","invariant","has","DuplicatePrimaryKey","removeInternalProperties","count","query","results","executeQuery","findFirst","firstResult","first","strict","JSON","stringify","where","EntityNotFound","findMany","map","getAll","listEntities","update","prevRecord","nextRecord","updateEntity","data","updateMany","records","updatedRecords","forEach","record","deleteMany","toHandlers","type","baseUrl","generateGraphQLHandlers","generateRestHandlers","toGraphQLSchema","generateGraphQLSchema"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nexports.__esModule = true;\nexports.factory = void 0;\nvar glossary_1 = require(\"./glossary\");\nvar first_1 = require(\"./utils/first\");\nvar executeQuery_1 = require(\"./query/executeQuery\");\nvar parseModelDefinition_1 = require(\"./model/parseModelDefinition\");\nvar createModel_1 = require(\"./model/createModel\");\nvar invariant_1 = require(\"./utils/invariant\");\nvar updateEntity_1 = require(\"./model/updateEntity\");\nvar OperationError_1 = require(\"./errors/OperationError\");\nvar Database_1 = require(\"./db/Database\");\nvar generateRestHandlers_1 = require(\"./model/generateRestHandlers\");\nvar generateGraphQLHandlers_1 = require(\"./model/generateGraphQLHandlers\");\nvar sync_1 = require(\"./extensions/sync\");\nvar removeInternalProperties_1 = require(\"./utils/removeInternalProperties\");\n/**\n * Create a database with the given models.\n */\nfunction factory(dictionary) {\n    var db = new Database_1.Database(dictionary);\n    // Jnitialize database extensions.\n    sync_1.sync(db);\n    return Object.entries(dictionary).reduce(function (acc, _a) {\n        var _b = __read(_a, 2), modelName = _b[0], props = _b[1];\n        acc[modelName] = createModelApi(dictionary, modelName, props, db);\n        return acc;\n    }, {});\n}\nexports.factory = factory;\nfunction createModelApi(dictionary, modelName, definition, db) {\n    var parsedModel = parseModelDefinition_1.parseModelDefinition(dictionary, modelName, definition);\n    var primaryKey = parsedModel.primaryKey;\n    if (typeof primaryKey === 'undefined') {\n        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.MissingPrimaryKey, \"Failed to create a \\\"\" + modelName + \"\\\" model: none of the listed properties is marked as a primary key (\" + Object.keys(definition).join() + \").\");\n    }\n    var api = {\n        create: function (initialValues) {\n            if (initialValues === void 0) { initialValues = {}; }\n            var entity = createModel_1.createModel(modelName, definition, parsedModel, initialValues, db);\n            var entityId = entity[entity[glossary_1.InternalEntityProperty.primaryKey]];\n            invariant_1.invariant(!entityId, \"Failed to create a \\\"\" + modelName + \"\\\" entity: expected the primary key \\\"\" + primaryKey + \"\\\" to have a value, but got: \" + entityId, new OperationError_1.OperationError(OperationError_1.OperationErrorType.MissingPrimaryKey));\n            // Prevent creation of multiple entities with the same primary key value.\n            invariant_1.invariant(db.has(modelName, entityId), \"Failed to create a \\\"\" + modelName + \"\\\" entity: an entity with the same primary key \\\"\" + entityId + \"\\\" (\\\"\" + entity[glossary_1.InternalEntityProperty.primaryKey] + \"\\\") already exists.\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey));\n            db.create(modelName, entity);\n            return removeInternalProperties_1.removeInternalProperties(entity);\n        },\n        count: function (query) {\n            if (!query) {\n                return db.count(modelName);\n            }\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            return results.length;\n        },\n        findFirst: function (query) {\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var firstResult = first_1.first(results);\n            invariant_1.invariant(query.strict && !firstResult, \"Failed to execute \\\"findFirst\\\" on the \\\"\" + modelName + \"\\\" model: no entity found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n            return firstResult ? removeInternalProperties_1.removeInternalProperties(firstResult) : null;\n        },\n        findMany: function (query) {\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            invariant_1.invariant(query.strict && results.length === 0, \"Failed to execute \\\"findMany\\\" on the \\\"\" + modelName + \"\\\" model: no entities found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n            return results.map(removeInternalProperties_1.removeInternalProperties);\n        },\n        getAll: function () {\n            return db.listEntities(modelName).map(removeInternalProperties_1.removeInternalProperties);\n        },\n        update: function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var prevRecord = first_1.first(results);\n            if (!prevRecord) {\n                invariant_1.invariant(strict, \"Failed to execute \\\"update\\\" on the \\\"\" + modelName + \"\\\" model: no entity found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n                return null;\n            }\n            var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data);\n            if (nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]] !==\n                prevRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]]) {\n                invariant_1.invariant(db.has(modelName, nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]]), \"Failed to execute \\\"update\\\" on the \\\"\" + modelName + \"\\\" model: the entity with a primary key \\\"\" + nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]] + \"\\\" (\\\"\" + primaryKey + \"\\\") already exists.\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey));\n            }\n            db.update(modelName, prevRecord, nextRecord);\n            return removeInternalProperties_1.removeInternalProperties(nextRecord);\n        },\n        updateMany: function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var updatedRecords = [];\n            if (records.length === 0) {\n                invariant_1.invariant(strict, \"Failed to execute \\\"updateMany\\\" on the \\\"\" + modelName + \"\\\" model: no entities found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n                return null;\n            }\n            records.forEach(function (prevRecord) {\n                var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data);\n                if (nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]] !==\n                    prevRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]]) {\n                    invariant_1.invariant(db.has(modelName, nextRecord[prevRecord[glossary_1.InternalEntityProperty.primaryKey]]), \"Failed to execute \\\"updateMany\\\" on the \\\"\" + modelName + \"\\\" model: no entities found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n                }\n                db.update(modelName, prevRecord, nextRecord);\n                updatedRecords.push(nextRecord);\n            });\n            return updatedRecords.map(removeInternalProperties_1.removeInternalProperties);\n        },\n        \"delete\": function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var record = first_1.first(results);\n            if (!record) {\n                invariant_1.invariant(strict, \"Failed to execute \\\"delete\\\" on the \\\"\" + modelName + \"\\\" model: no entity found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n                return null;\n            }\n            db[\"delete\"](modelName, record[record[glossary_1.InternalEntityProperty.primaryKey]]);\n            return removeInternalProperties_1.removeInternalProperties(record);\n        },\n        deleteMany: function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            if (records.length === 0) {\n                invariant_1.invariant(strict, \"Failed to execute \\\"deleteMany\\\" on the \\\"\" + modelName + \"\\\" model: no entities found matching the query \\\"\" + JSON.stringify(query.where) + \"\\\".\", new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound));\n                return null;\n            }\n            records.forEach(function (record) {\n                db[\"delete\"](modelName, record[record[glossary_1.InternalEntityProperty.primaryKey]]);\n            });\n            return records.map(removeInternalProperties_1.removeInternalProperties);\n        },\n        toHandlers: function (type, baseUrl) {\n            if (type === 'graphql') {\n                return generateGraphQLHandlers_1.generateGraphQLHandlers(modelName, definition, api, baseUrl);\n            }\n            return generateRestHandlers_1.generateRestHandlers(modelName, definition, api, baseUrl);\n        },\n        toGraphQLSchema: function () {\n            return generateGraphQLHandlers_1.generateGraphQLSchema(modelName, definition, api);\n        }\n    };\n    return api;\n}\n"]},"metadata":{},"sourceType":"script"}