{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nexports.__esModule = true;\nexports.sync = void 0;\n\nfunction removeListeners(event, db) {\n  var listeners = db.events.listeners(event);\n  listeners.forEach(function (listener) {\n    db.events.removeListener(event, listener);\n  });\n  return function () {\n    listeners.forEach(function (listener) {\n      db.events.addListener(event, listener);\n    });\n  };\n}\n/**\n * Synchronizes database operations across multiple clients.\n */\n\n\nfunction sync(db) {\n  var IS_BROWSER = typeof window !== 'undefined';\n  var SUPPORTS_BROADCAST_CHANNEL = typeof BroadcastChannel !== 'undefined';\n\n  if (!IS_BROWSER || !SUPPORTS_BROADCAST_CHANNEL) {\n    return;\n  }\n\n  var channel = new BroadcastChannel('mswjs/data/sync');\n  channel.addEventListener('message', function (event) {\n    var _a = event.data,\n        operationType = _a.operationType,\n        payload = _a.payload;\n\n    var _b = __read(payload),\n        sourceId = _b[0],\n        args = _b.slice(1); // Ignore messages originating from unrelated databases.\n    // Useful in case of multiple databases on the same page.\n\n\n    if (db.id !== sourceId) {\n      return;\n    } // Remove database event listener for the signaled operation\n    // to prevent an infinite loop when applying this operation.\n\n\n    var restoreListeners = removeListeners(operationType, db); // Apply the database operation signaled from another client\n    // to the current database instance.\n    // @ts-ignore\n\n    db[operationType].apply(db, __spreadArray([], __read(args))); // Re-attach database event listeners.\n\n    restoreListeners();\n  });\n\n  function broadcastDatabaseEvent(operationType) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      channel.postMessage({\n        operationType: operationType,\n        payload: args\n      });\n    };\n  }\n\n  db.events.on('create', broadcastDatabaseEvent('create'));\n  db.events.on('update', broadcastDatabaseEvent('update'));\n  db.events.on('delete', broadcastDatabaseEvent('delete'));\n}\n\nexports.sync = sync;","map":{"version":3,"sources":["/Users/selamhabteab/Desktop/Projects/redux/community-board/node_modules/@mswjs/data/lib/extensions/sync.js"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spreadArray","to","from","il","length","j","exports","__esModule","sync","removeListeners","event","db","listeners","events","forEach","listener","removeListener","addListener","IS_BROWSER","window","SUPPORTS_BROADCAST_CHANNEL","BroadcastChannel","channel","addEventListener","_a","data","operationType","payload","_b","sourceId","args","slice","id","restoreListeners","apply","broadcastDatabaseEvent","_i","arguments","postMessage","on"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nexports.__esModule = true;\nexports.sync = void 0;\nfunction removeListeners(event, db) {\n    var listeners = db.events.listeners(event);\n    listeners.forEach(function (listener) {\n        db.events.removeListener(event, listener);\n    });\n    return function () {\n        listeners.forEach(function (listener) {\n            db.events.addListener(event, listener);\n        });\n    };\n}\n/**\n * Synchronizes database operations across multiple clients.\n */\nfunction sync(db) {\n    var IS_BROWSER = typeof window !== 'undefined';\n    var SUPPORTS_BROADCAST_CHANNEL = typeof BroadcastChannel !== 'undefined';\n    if (!IS_BROWSER || !SUPPORTS_BROADCAST_CHANNEL) {\n        return;\n    }\n    var channel = new BroadcastChannel('mswjs/data/sync');\n    channel.addEventListener('message', function (event) {\n        var _a = event.data, operationType = _a.operationType, payload = _a.payload;\n        var _b = __read(payload), sourceId = _b[0], args = _b.slice(1);\n        // Ignore messages originating from unrelated databases.\n        // Useful in case of multiple databases on the same page.\n        if (db.id !== sourceId) {\n            return;\n        }\n        // Remove database event listener for the signaled operation\n        // to prevent an infinite loop when applying this operation.\n        var restoreListeners = removeListeners(operationType, db);\n        // Apply the database operation signaled from another client\n        // to the current database instance.\n        // @ts-ignore\n        db[operationType].apply(db, __spreadArray([], __read(args)));\n        // Re-attach database event listeners.\n        restoreListeners();\n    });\n    function broadcastDatabaseEvent(operationType) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            channel.postMessage({\n                operationType: operationType,\n                payload: args\n            });\n        };\n    }\n    db.events.on('create', broadcastDatabaseEvent('create'));\n    db.events.on('update', broadcastDatabaseEvent('update'));\n    db.events.on('delete', broadcastDatabaseEvent('delete'));\n}\nexports.sync = sync;\n"]},"metadata":{},"sourceType":"script"}