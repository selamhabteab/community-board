{"ast":null,"code":"var _jsxFileName = \"/Users/selamhabteab/Desktop/Projects/redux/redux-essentials-example-app/src/features/posts/SinglePostPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'; // import { PostAuthor } from './PostAuthor'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SinglePostPage = ({\n  match\n}) => {\n  _s();\n\n  const {\n    postId\n  } = match.params; //React Router will pass in a match object as a prop that contains the URL information we're looking for. When we set up the route to render this component, we're going to tell it to parse the second part of the URL as a variable named postId, and we can read that value from match.params.\n  // postId = { match.params } ?\n  // {postId: match.params} ?\n\n  const post = useSelector(state => state.posts.find(post => post.id === postId));\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-content\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/editPost/${post.id}`,\n        className: \"button\",\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Back to All Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SinglePostPage, \"ZCrU7oOX7AXdDCQUnV4+qfKeF4w=\", false, function () {\n  return [useSelector];\n});\n\n_c = SinglePostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePostPage\");","map":{"version":3,"sources":["/Users/selamhabteab/Desktop/Projects/redux/redux-essentials-example-app/src/features/posts/SinglePostPage.js"],"names":["React","useSelector","Link","SinglePostPage","match","postId","params","post","state","posts","find","id","title","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;;AAGA,OAAO,MAAMC,cAAc,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAiB;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,MAAzB,CAD2C,CACX;AAChC;AACA;;AAEA,QAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAC1BA,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBH,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYN,MAArC,CADoB,CAAxB;;AAGA,MAAG,CAACE,IAAJ,EAAU;AACN,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AACD,sBACI;AAAA,2BACI;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,8BACI;AAAA,kBAAMA,IAAI,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA,kBAA8BL,IAAI,CAACM;AAAnC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,aAAYN,IAAI,CAACI,EAAG,EAA/B;AAAkC,QAAA,SAAS,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA5BM;;GAAMR,c;UAKIF,W;;;KALJE,c","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n// import { PostAuthor } from './PostAuthor'\n\n\nexport const SinglePostPage = ( { match } ) => {\n    const { postId } = match.params //React Router will pass in a match object as a prop that contains the URL information we're looking for. When we set up the route to render this component, we're going to tell it to parse the second part of the URL as a variable named postId, and we can read that value from match.params.\n    // postId = { match.params } ?\n    // {postId: match.params} ?\n\n    const post = useSelector(state => \n        state.posts.find(post => post.id === postId)\n        )\n    if(!post) {\n        return (\n            <section>\n                <h2>Post not found!</h2>\n            </section>\n        )\n    }\n    return (\n        <section>\n            <article className=\"post\">\n                <h2>{ post.title }</h2>\n                {/* <PostAuthor userId={post.user} /> */}\n                <p className=\"post-content\">{ post.content }</p>\n                <Link to={`/editPost/${post.id}`} className=\"button\">\n                    Edit Post\n                </Link>\n                <Link to=\"/\">Back to All Posts</Link>\n            </article>\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}