{"ast":null,"code":"var _jsxFileName = \"/Users/selamhabteab/Desktop/Projects/redux/redux-essentials-example-app/src/features/posts/AddPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { postAdded } from './postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPostForm = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const dispatch = useDispatch();\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(title, content));\n      setTitle('');\n      setContent('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \" Post Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \" Content \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        children: \" Save Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPostForm, \"0/VwjnJAcxdq8NIz09thNbUoLxg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["/Users/selamhabteab/Desktop/Projects/redux/redux-essentials-example-app/src/features/posts/AddPostForm.js"],"names":["React","useState","useDispatch","useSelector","nanoid","postAdded","AddPostForm","title","setTitle","content","setContent","dispatch","onTitleChanged","e","target","value","onContentChanged","onSavePostClicked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,cAAc,GAAGC,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AACA,QAAMC,gBAAgB,GAAGH,CAAC,IAAIH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC;;AAEA,QAAME,iBAAiB,GAAG,MAAM;AAC5B,QAAIV,KAAK,IAAIE,OAAb,EAAsB;AAClBE,MAAAA,QAAQ,CAACN,SAAS,CAACE,KAAD,EAAQE,OAAR,CAAV,CAAR;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,GAND;;AAQA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,IAAI,EAAG,MADP;AAEA,QAAA,EAAE,EAAC,WAFH;AAGA,QAAA,IAAI,EAAC,WAHL;AAIA,QAAA,KAAK,EAAKH,KAJV;AAKA,QAAA,QAAQ,EAAGK;AALX;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AACA,QAAA,EAAE,EAAC,aADH;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,QAAA,KAAK,EAAEH,OAHP;AAIA,QAAA,QAAQ,EAAEO;AAJV;AAAA;AAAA;AAAA;AAAA,cAVJ,eAgBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAxCM;;GAAMX,W;UAIQJ,W;;;KAJRI,W","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { nanoid } from '@reduxjs/toolkit'\nimport { postAdded } from './postsSlice'\n\nexport const AddPostForm = () => {\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n\n    const dispatch = useDispatch()\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onContentChanged = e => setContent(e.target.value)\n\n    const onSavePostClicked = () => {\n        if (title && content) {\n            dispatch(postAdded(title, content))\n            setTitle('')\n            setContent('')\n        }\n    }\n\n    return (\n        <section>\n            <h2>Add a New Post </h2>\n            <form>\n                <label htmlFor=\"postTitle\"> Post Title: </label>\n                <input \n                type = 'text'\n                id=\"postTitle\"\n                name=\"postTitle\"\n                value = { title }\n                onChange={ onTitleChanged}\n                />\n                <label htmlFor=\"postContent\"> Content </label>\n                <textarea\n                id=\"postContent\"\n                name=\"postContent\"\n                value={content}\n                onChange={onContentChanged}\n                />\n                <button type=\"button\" onClick={onSavePostClicked}> Save Post </button>\n            </form>\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}