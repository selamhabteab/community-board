{"ast":null,"code":"var _jsxFileName = \"/Users/selamhabteab/Desktop/Projects/redux/redux-essentials-example-app/src/features/posts/EditPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { postUpdated } from './postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditPostForm = ({\n  match\n}) => {\n  _s();\n\n  const {\n    postId\n  } = match.params;\n  const post = useSelector(state => state.post.find(post => post.id === postId));\n  const [title, setTitle] = useState(post.title);\n  const [content, setContent] = useState(post.content);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onTitleChanged = e => setTitle(e.traget.value);\n\n  const onContentChanged = e => setContent(e.traget.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postUpdated({\n        id: postId,\n        title,\n        content\n      }));\n      history.push(`/posts/${postId}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \" Post Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        placeholder: \"We want to hear it!\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \" Content: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onSavePostClicked,\n      children: \"Save Post!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPostForm, \"6vptCjeZpO0A0TMiXQ1PWbhYAYI=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = EditPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"sources":["/Users/selamhabteab/Desktop/Projects/redux/redux-essentials-example-app/src/features/posts/EditPostForm.js"],"names":["React","useState","useSelector","useDispatch","useHistory","postUpdated","EditPostForm","match","postId","params","post","state","find","id","title","setTitle","content","setContent","dispatch","history","onTitleChanged","e","traget","value","onContentChanged","onSavePostClicked","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,MAAzB;AAEA,QAAMC,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,IAAN,CAAWE,IAAX,CAAgBF,IAAI,IAAGA,IAAI,CAACG,EAAL,KAAUL,MAAjC,CAAV,CAAxB;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACS,IAAI,CAACI,KAAN,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAACS,IAAI,CAACM,OAAN,CAAtC;AAEA,QAAME,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,OAAO,GAAGf,UAAU,EAA1B;;AAEA,QAAMgB,cAAc,GAAGC,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AACA,QAAMC,gBAAgB,GAAGH,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC;;AAEA,QAAME,iBAAiB,GAAG,MAAM;AAC5B,QAAIX,KAAK,IAAIE,OAAb,EAAsB;AAClBE,MAAAA,QAAQ,CAACb,WAAW,CAAC;AAACQ,QAAAA,EAAE,EAAEL,MAAL;AAAaM,QAAAA,KAAb;AAAoBE,QAAAA;AAApB,OAAD,CAAZ,CAAR;AACAG,MAAAA,OAAO,CAACO,IAAR,CAAc,UAASlB,MAAO,EAA9B;AACH;AACJ,GALD;;AAMA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,EAAE,EAAC,WAFH;AAGA,QAAA,IAAI,EAAC,WAHL;AAIA,QAAA,WAAW,EAAC,qBAJZ;AAKA,QAAA,KAAK,EAAEM,KALP;AAMA,QAAA,QAAQ,EAAEM;AANV;AAAA;AAAA;AAAA;AAAA,cAFR,eAUI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AACA,QAAA,EAAE,EAAC,aADH;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,QAAA,KAAK,EAAEJ,OAHP;AAIA,QAAA,QAAQ,EAAEQ;AAJV;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAoBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA9CM;;GAAMnB,Y;UAGIJ,W,EAKIC,W,EACDC,U;;;KATPE,Y","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { postUpdated } from './postsSlice'\n\nexport const EditPostForm = ({match}) => {\n    const { postId } = match.params\n    \n    const post = useSelector(state => state.post.find(post=> post.id===postId))\n\n    const [title, setTitle] = useState(post.title)\n    const [content, setContent] = useState(post.content)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const onTitleChanged = e => setTitle(e.traget.value)\n    const onContentChanged = e => setContent(e.traget.value)\n\n    const onSavePostClicked = () => {\n        if (title && content) {\n            dispatch(postUpdated({id: postId, title, content}))\n            history.push(`/posts/${postId}`)\n        }\n    }\n    return (\n        <section>\n            <h2>Edit Post</h2>\n            <form>\n                <label htmlFor=\"postTitle\"> Post Title: </label>\n                    <input\n                    type=\"text\"\n                    id=\"postTitle\"\n                    name=\"postTitle\"\n                    placeholder=\"We want to hear it!\"\n                    value={title}\n                    onChange={onTitleChanged}\n                    />\n                <label htmlFor=\"postContent\"> Content: </label>\n                <textarea\n                id=\"postContent\"\n                name=\"postContent\"\n                value={content}\n                onChange={onContentChanged}\n                 />\n            </form>\n            <button type=\"button\" onClick={onSavePostClicked}> \n            Save Post!\n            </button>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}