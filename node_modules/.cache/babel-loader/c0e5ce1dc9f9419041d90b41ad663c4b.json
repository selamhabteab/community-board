{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nexports.__esModule = true;\nexports.Database = void 0;\n\nvar md5_1 = __importDefault(require(\"md5\"));\n\nvar strict_event_emitter_1 = require(\"strict-event-emitter\");\n\nvar glossary_1 = require(\"../glossary\");\n\nvar callOrder = 0;\n\nvar Database =\n/** @class */\nfunction () {\n  function Database(dictionary) {\n    this.events = new strict_event_emitter_1.StrictEventEmitter();\n    this.models = Object.keys(dictionary).reduce(function (acc, modelName) {\n      acc[modelName] = new Map();\n      return acc;\n    }, {});\n    callOrder++;\n    this.id = this.generateId();\n  }\n  /**\n   * Generates a unique MD5 hash based on the database\n   * module location and invocation order. Used to reproducibly\n   * identify a database instance among sibling instances.\n   */\n\n\n  Database.prototype.generateId = function () {\n    var stack = new Error().stack;\n    var callFrame = stack === null || stack === void 0 ? void 0 : stack.split('\\n')[4];\n    var salt = callOrder + \"-\" + (callFrame === null || callFrame === void 0 ? void 0 : callFrame.trim());\n    return md5_1[\"default\"](salt);\n  };\n\n  Database.prototype.getModel = function (name) {\n    return this.models[name];\n  };\n\n  Database.prototype.create = function (modelName, entity, customPrimaryKey) {\n    var primaryKey = customPrimaryKey || entity[entity[glossary_1.InternalEntityProperty.primaryKey]];\n    this.events.emit('create', this.id, modelName, entity, customPrimaryKey);\n    return this.getModel(modelName).set(primaryKey, entity);\n  };\n\n  Database.prototype.update = function (modelName, prevEntity, nextEntity) {\n    var prevPrimaryKey = prevEntity[prevEntity[glossary_1.InternalEntityProperty.primaryKey]];\n    var nextPrimaryKey = nextEntity[prevEntity[glossary_1.InternalEntityProperty.primaryKey]];\n\n    if (nextPrimaryKey !== prevPrimaryKey) {\n      this[\"delete\"](modelName, prevPrimaryKey);\n    }\n\n    this.create(modelName, nextEntity, nextPrimaryKey);\n    this.events.emit('update', this.id, modelName, prevEntity, nextEntity);\n  };\n\n  Database.prototype.has = function (modelName, primaryKey) {\n    return this.getModel(modelName).has(primaryKey);\n  };\n\n  Database.prototype.count = function (modelName) {\n    return this.getModel(modelName).size;\n  };\n\n  Database.prototype[\"delete\"] = function (modelName, primaryKey) {\n    this.getModel(modelName)[\"delete\"](primaryKey);\n    this.events.emit('delete', this.id, modelName, primaryKey);\n  };\n\n  Database.prototype.listEntities = function (modelName) {\n    return Array.from(this.getModel(modelName).values());\n  };\n\n  return Database;\n}();\n\nexports.Database = Database;","map":{"version":3,"sources":["/Users/selamhabteab/Desktop/Projects/redux/community-board/node_modules/@mswjs/data/lib/db/Database.js"],"names":["__importDefault","mod","__esModule","exports","Database","md5_1","require","strict_event_emitter_1","glossary_1","callOrder","dictionary","events","StrictEventEmitter","models","Object","keys","reduce","acc","modelName","Map","id","generateId","prototype","stack","Error","callFrame","split","salt","trim","getModel","name","create","entity","customPrimaryKey","primaryKey","InternalEntityProperty","emit","set","update","prevEntity","nextEntity","prevPrimaryKey","nextPrimaryKey","has","count","size","listEntities","Array","from","values"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.Database = void 0;\nvar md5_1 = __importDefault(require(\"md5\"));\nvar strict_event_emitter_1 = require(\"strict-event-emitter\");\nvar glossary_1 = require(\"../glossary\");\nvar callOrder = 0;\nvar Database = /** @class */ (function () {\n    function Database(dictionary) {\n        this.events = new strict_event_emitter_1.StrictEventEmitter();\n        this.models = Object.keys(dictionary).reduce(function (acc, modelName) {\n            acc[modelName] = new Map();\n            return acc;\n        }, {});\n        callOrder++;\n        this.id = this.generateId();\n    }\n    /**\n     * Generates a unique MD5 hash based on the database\n     * module location and invocation order. Used to reproducibly\n     * identify a database instance among sibling instances.\n     */\n    Database.prototype.generateId = function () {\n        var stack = new Error().stack;\n        var callFrame = stack === null || stack === void 0 ? void 0 : stack.split('\\n')[4];\n        var salt = callOrder + \"-\" + (callFrame === null || callFrame === void 0 ? void 0 : callFrame.trim());\n        return md5_1[\"default\"](salt);\n    };\n    Database.prototype.getModel = function (name) {\n        return this.models[name];\n    };\n    Database.prototype.create = function (modelName, entity, customPrimaryKey) {\n        var primaryKey = customPrimaryKey ||\n            entity[entity[glossary_1.InternalEntityProperty.primaryKey]];\n        this.events.emit('create', this.id, modelName, entity, customPrimaryKey);\n        return this.getModel(modelName).set(primaryKey, entity);\n    };\n    Database.prototype.update = function (modelName, prevEntity, nextEntity) {\n        var prevPrimaryKey = prevEntity[prevEntity[glossary_1.InternalEntityProperty.primaryKey]];\n        var nextPrimaryKey = nextEntity[prevEntity[glossary_1.InternalEntityProperty.primaryKey]];\n        if (nextPrimaryKey !== prevPrimaryKey) {\n            this[\"delete\"](modelName, prevPrimaryKey);\n        }\n        this.create(modelName, nextEntity, nextPrimaryKey);\n        this.events.emit('update', this.id, modelName, prevEntity, nextEntity);\n    };\n    Database.prototype.has = function (modelName, primaryKey) {\n        return this.getModel(modelName).has(primaryKey);\n    };\n    Database.prototype.count = function (modelName) {\n        return this.getModel(modelName).size;\n    };\n    Database.prototype[\"delete\"] = function (modelName, primaryKey) {\n        this.getModel(modelName)[\"delete\"](primaryKey);\n        this.events.emit('delete', this.id, modelName, primaryKey);\n    };\n    Database.prototype.listEntities = function (modelName) {\n        return Array.from(this.getModel(modelName).values());\n    };\n    return Database;\n}());\nexports.Database = Database;\n"]},"metadata":{},"sourceType":"script"}