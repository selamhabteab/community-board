{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.Mock = global.Mock || {});\n})(this, function (exports) {\n  'use strict';\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * Check if we're required to add a port number.\n   *\n   * @see https://url.spec.whatwg.org/#default-port\n   * @param {Number|String} port Port number we need to check\n   * @param {String} protocol Protocol we need to check against.\n   * @returns {Boolean} Is it a default port for the given protocol\n   * @api private\n   */\n\n  var requiresPort = function required(port, protocol) {\n    protocol = protocol.split(':')[0];\n    port = +port;\n\n    if (!port) {\n      return false;\n    }\n\n    switch (protocol) {\n      case 'http':\n      case 'ws':\n        return port !== 80;\n\n      case 'https':\n      case 'wss':\n        return port !== 443;\n\n      case 'ftp':\n        return port !== 21;\n\n      case 'gopher':\n        return port !== 70;\n\n      case 'file':\n        return false;\n    }\n\n    return port !== 0;\n  };\n\n  var has = Object.prototype.hasOwnProperty;\n  var undef;\n  /**\n   * Decode a URI encoded string.\n   *\n   * @param {String} input The URI encoded string.\n   * @returns {String|Null} The decoded string.\n   * @api private\n   */\n\n  function decode(input) {\n    try {\n      return decodeURIComponent(input.replace(/\\+/g, ' '));\n    } catch (e) {\n      return null;\n    }\n  }\n  /**\n   * Attempts to encode a given input.\n   *\n   * @param {String} input The string that needs to be encoded.\n   * @returns {String|Null} The encoded string.\n   * @api private\n   */\n\n\n  function encode(input) {\n    try {\n      return encodeURIComponent(input);\n    } catch (e) {\n      return null;\n    }\n  }\n  /**\n   * Simple query string parser.\n   *\n   * @param {String} query The query string that needs to be parsed.\n   * @returns {Object}\n   * @api public\n   */\n\n\n  function querystring(query) {\n    var parser = /([^=?#&]+)=?([^&]*)/g,\n        result = {},\n        part;\n\n    while (part = parser.exec(query)) {\n      var key = decode(part[1]),\n          value = decode(part[2]); //\n      // Prevent overriding of existing properties. This ensures that build-in\n      // methods like `toString` or __proto__ are not overriden by malicious\n      // querystrings.\n      //\n      // In the case if failed decoding, we want to omit the key/value pairs\n      // from the result.\n      //\n\n      if (key === null || value === null || key in result) {\n        continue;\n      }\n\n      result[key] = value;\n    }\n\n    return result;\n  }\n  /**\n   * Transform a query string to an object.\n   *\n   * @param {Object} obj Object that should be transformed.\n   * @param {String} prefix Optional prefix.\n   * @returns {String}\n   * @api public\n   */\n\n\n  function querystringify(obj, prefix) {\n    prefix = prefix || '';\n    var pairs = [],\n        value,\n        key; //\n    // Optionally prefix with a '?' if needed\n    //\n\n    if ('string' !== typeof prefix) {\n      prefix = '?';\n    }\n\n    for (key in obj) {\n      if (has.call(obj, key)) {\n        value = obj[key]; //\n        // Edge cases where we actually want to encode the value to an empty\n        // string instead of the stringified value.\n        //\n\n        if (!value && (value === null || value === undef || isNaN(value))) {\n          value = '';\n        }\n\n        key = encode(key);\n        value = encode(value); //\n        // If we failed to encode the strings, we should bail out as we don't\n        // want to add invalid strings to the query.\n        //\n\n        if (key === null || value === null) {\n          continue;\n        }\n\n        pairs.push(key + '=' + value);\n      }\n    }\n\n    return pairs.length ? prefix + pairs.join('&') : '';\n  } //\n  // Expose the module.\n  //\n\n\n  var stringify = querystringify;\n  var parse = querystring;\n  var querystringify_1 = {\n    stringify: stringify,\n    parse: parse\n  };\n  var slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n  var protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i;\n  var whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]';\n  var left = new RegExp('^' + whitespace + '+');\n  /**\n   * Trim a given string.\n   *\n   * @param {String} str String to trim.\n   * @public\n   */\n\n  function trimLeft(str) {\n    return (str ? str : '').toString().replace(left, '');\n  }\n  /**\n   * These are the parse rules for the URL parser, it informs the parser\n   * about:\n   *\n   * 0. The char it Needs to parse, if it's a string it should be done using\n   *    indexOf, RegExp using exec and NaN means set as current value.\n   * 1. The property we should set when parsing this value.\n   * 2. Indication if it's backwards or forward parsing, when set as number it's\n   *    the value of extra chars that should be split off.\n   * 3. Inherit from location if non existing in the parser.\n   * 4. `toLowerCase` the resulting value.\n   */\n\n\n  var rules = [['#', 'hash'], // Extract from the back.\n  ['?', 'query'], // Extract from the back.\n  function sanitize(address, url) {\n    // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  }, ['/', 'pathname'], // Extract from the back.\n  ['@', 'auth', 1], // Extract from the front.\n  [NaN, 'host', undefined, 1, 1], // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1], // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1] // Set left over.\n  ];\n  /**\n   * These properties should not be copied or inherited from. This is only needed\n   * for all non blob URL's as a blob URL does not include a hash, only the\n   * origin.\n   *\n   * @type {Object}\n   * @private\n   */\n\n  var ignore = {\n    hash: 1,\n    query: 1\n  };\n  /**\n   * The location object differs when your code is loaded through a normal page,\n   * Worker or through a worker using a blob. And with the blobble begins the\n   * trouble as the location object will contain the URL of the blob, not the\n   * location of the page where our code is loaded in. The actual origin is\n   * encoded in the `pathname` so we can thankfully generate a good \"default\"\n   * location from it so we can generate proper relative URL's again.\n   *\n   * @param {Object|String} loc Optional default location object.\n   * @returns {Object} lolcation object.\n   * @public\n   */\n\n  function lolcation(loc) {\n    var globalVar;\n\n    if (typeof window !== 'undefined') {\n      globalVar = window;\n    } else if (typeof commonjsGlobal !== 'undefined') {\n      globalVar = commonjsGlobal;\n    } else if (typeof self !== 'undefined') {\n      globalVar = self;\n    } else {\n      globalVar = {};\n    }\n\n    var location = globalVar.location || {};\n    loc = loc || location;\n    var finaldestination = {},\n        type = typeof loc,\n        key;\n\n    if ('blob:' === loc.protocol) {\n      finaldestination = new Url(unescape(loc.pathname), {});\n    } else if ('string' === type) {\n      finaldestination = new Url(loc, {});\n\n      for (key in ignore) {\n        delete finaldestination[key];\n      }\n    } else if ('object' === type) {\n      for (key in loc) {\n        if (key in ignore) {\n          continue;\n        }\n\n        finaldestination[key] = loc[key];\n      }\n\n      if (finaldestination.slashes === undefined) {\n        finaldestination.slashes = slashes.test(loc.href);\n      }\n    }\n\n    return finaldestination;\n  }\n  /**\n   * Check whether a protocol scheme is special.\n   *\n   * @param {String} The protocol scheme of the URL\n   * @return {Boolean} `true` if the protocol scheme is special, else `false`\n   * @private\n   */\n\n\n  function isSpecial(scheme) {\n    return scheme === 'file:' || scheme === 'ftp:' || scheme === 'http:' || scheme === 'https:' || scheme === 'ws:' || scheme === 'wss:';\n  }\n  /**\n   * @typedef ProtocolExtract\n   * @type Object\n   * @property {String} protocol Protocol matched in the URL, in lowercase.\n   * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n   * @property {String} rest Rest of the URL that is not part of the protocol.\n   */\n\n  /**\n   * Extract protocol information from a URL with/without double slash (\"//\").\n   *\n   * @param {String} address URL we want to extract from.\n   * @param {Object} location\n   * @return {ProtocolExtract} Extracted information.\n   * @private\n   */\n\n\n  function extractProtocol(address, location) {\n    address = trimLeft(address);\n    location = location || {};\n    var match = protocolre.exec(address);\n    var protocol = match[1] ? match[1].toLowerCase() : '';\n    var forwardSlashes = !!match[2];\n    var otherSlashes = !!match[3];\n    var slashesCount = 0;\n    var rest;\n\n    if (forwardSlashes) {\n      if (otherSlashes) {\n        rest = match[2] + match[3] + match[4];\n        slashesCount = match[2].length + match[3].length;\n      } else {\n        rest = match[2] + match[4];\n        slashesCount = match[2].length;\n      }\n    } else {\n      if (otherSlashes) {\n        rest = match[3] + match[4];\n        slashesCount = match[3].length;\n      } else {\n        rest = match[4];\n      }\n    }\n\n    if (protocol === 'file:') {\n      if (slashesCount >= 2) {\n        rest = rest.slice(2);\n      }\n    } else if (isSpecial(protocol)) {\n      rest = match[4];\n    } else if (protocol) {\n      if (forwardSlashes) {\n        rest = rest.slice(2);\n      }\n    } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n      rest = match[4];\n    }\n\n    return {\n      protocol: protocol,\n      slashes: forwardSlashes || isSpecial(protocol),\n      slashesCount: slashesCount,\n      rest: rest\n    };\n  }\n  /**\n   * Resolve a relative URL pathname against a base URL pathname.\n   *\n   * @param {String} relative Pathname of the relative URL.\n   * @param {String} base Pathname of the base URL.\n   * @return {String} Resolved pathname.\n   * @private\n   */\n\n\n  function resolve(relative, base) {\n    if (relative === '') {\n      return base;\n    }\n\n    var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/')),\n        i = path.length,\n        last = path[i - 1],\n        unshift = false,\n        up = 0;\n\n    while (i--) {\n      if (path[i] === '.') {\n        path.splice(i, 1);\n      } else if (path[i] === '..') {\n        path.splice(i, 1);\n        up++;\n      } else if (up) {\n        if (i === 0) {\n          unshift = true;\n        }\n\n        path.splice(i, 1);\n        up--;\n      }\n    }\n\n    if (unshift) {\n      path.unshift('');\n    }\n\n    if (last === '.' || last === '..') {\n      path.push('');\n    }\n\n    return path.join('/');\n  }\n  /**\n   * The actual URL instance. Instead of returning an object we've opted-in to\n   * create an actual constructor as it's much more memory efficient and\n   * faster and it pleases my OCD.\n   *\n   * It is worth noting that we should not use `URL` as class name to prevent\n   * clashes with the global URL instance that got introduced in browsers.\n   *\n   * @constructor\n   * @param {String} address URL we want to parse.\n   * @param {Object|String} [location] Location defaults for relative paths.\n   * @param {Boolean|Function} [parser] Parser for the query string.\n   * @private\n   */\n\n\n  function Url(address, location, parser) {\n    address = trimLeft(address);\n\n    if (!(this instanceof Url)) {\n      return new Url(address, location, parser);\n    }\n\n    var relative,\n        extracted,\n        parse,\n        instruction,\n        index,\n        key,\n        instructions = rules.slice(),\n        type = typeof location,\n        url = this,\n        i = 0; //\n    // The following if statements allows this module two have compatibility with\n    // 2 different API:\n    //\n    // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n    //    where the boolean indicates that the query string should also be parsed.\n    //\n    // 2. The `URL` interface of the browser which accepts a URL, object as\n    //    arguments. The supplied object will be used as default values / fall-back\n    //    for relative paths.\n    //\n\n    if ('object' !== type && 'string' !== type) {\n      parser = location;\n      location = null;\n    }\n\n    if (parser && 'function' !== typeof parser) {\n      parser = querystringify_1.parse;\n    }\n\n    location = lolcation(location); //\n    // Extract protocol information before running the instructions.\n    //\n\n    extracted = extractProtocol(address || '', location);\n    relative = !extracted.protocol && !extracted.slashes;\n    url.slashes = extracted.slashes || relative && location.slashes;\n    url.protocol = extracted.protocol || location.protocol || '';\n    address = extracted.rest; //\n    // When the authority component is absent the URL starts with a path\n    // component.\n    //\n\n    if (url.protocol === 'file:' || !extracted.slashes && (extracted.protocol || extracted.slashesCount < 2 || !isSpecial(url.protocol))) {\n      instructions[3] = [/(.*)/, 'pathname'];\n    }\n\n    for (; i < instructions.length; i++) {\n      instruction = instructions[i];\n\n      if (typeof instruction === 'function') {\n        address = instruction(address, url);\n        continue;\n      }\n\n      parse = instruction[0];\n      key = instruction[1];\n\n      if (parse !== parse) {\n        url[key] = address;\n      } else if ('string' === typeof parse) {\n        if (~(index = address.indexOf(parse))) {\n          if ('number' === typeof instruction[2]) {\n            url[key] = address.slice(0, index);\n            address = address.slice(index + instruction[2]);\n          } else {\n            url[key] = address.slice(index);\n            address = address.slice(0, index);\n          }\n        }\n      } else if (index = parse.exec(address)) {\n        url[key] = index[1];\n        address = address.slice(0, index.index);\n      }\n\n      url[key] = url[key] || (relative && instruction[3] ? location[key] || '' : ''); //\n      // Hostname, host and protocol should be lowercased so they can be used to\n      // create a proper `origin`.\n      //\n\n      if (instruction[4]) {\n        url[key] = url[key].toLowerCase();\n      }\n    } //\n    // Also parse the supplied query string in to an object. If we're supplied\n    // with a custom parser as function use that instead of the default build-in\n    // parser.\n    //\n\n\n    if (parser) {\n      url.query = parser(url.query);\n    } //\n    // If the URL is relative, resolve the pathname against the base URL.\n    //\n\n\n    if (relative && location.slashes && url.pathname.charAt(0) !== '/' && (url.pathname !== '' || location.pathname !== '')) {\n      url.pathname = resolve(url.pathname, location.pathname);\n    } //\n    // Default to a / for pathname if none exists. This normalizes the URL\n    // to always have a /\n    //\n\n\n    if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n      url.pathname = '/' + url.pathname;\n    } //\n    // We should not add port numbers if they are already the default port number\n    // for a given protocol. As the host also contains the port number we're going\n    // override it with the hostname which contains no port number.\n    //\n\n\n    if (!requiresPort(url.port, url.protocol)) {\n      url.host = url.hostname;\n      url.port = '';\n    } //\n    // Parse down the `auth` for the username and password.\n    //\n\n\n    url.username = url.password = '';\n\n    if (url.auth) {\n      instruction = url.auth.split(':');\n      url.username = instruction[0] || '';\n      url.password = instruction[1] || '';\n    }\n\n    url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host ? url.protocol + '//' + url.host : 'null'; //\n    // The href is just the compiled result.\n    //\n\n    url.href = url.toString();\n  }\n  /**\n   * This is convenience method for changing properties in the URL instance to\n   * insure that they all propagate correctly.\n   *\n   * @param {String} part          Property we need to adjust.\n   * @param {Mixed} value          The newly assigned value.\n   * @param {Boolean|Function} fn  When setting the query, it will be the function\n   *                               used to parse the query.\n   *                               When setting the protocol, double slash will be\n   *                               removed from the final url if it is true.\n   * @returns {URL} URL instance for chaining.\n   * @public\n   */\n\n\n  function set(part, value, fn) {\n    var url = this;\n\n    switch (part) {\n      case 'query':\n        if ('string' === typeof value && value.length) {\n          value = (fn || querystringify_1.parse)(value);\n        }\n\n        url[part] = value;\n        break;\n\n      case 'port':\n        url[part] = value;\n\n        if (!requiresPort(value, url.protocol)) {\n          url.host = url.hostname;\n          url[part] = '';\n        } else if (value) {\n          url.host = url.hostname + ':' + value;\n        }\n\n        break;\n\n      case 'hostname':\n        url[part] = value;\n\n        if (url.port) {\n          value += ':' + url.port;\n        }\n\n        url.host = value;\n        break;\n\n      case 'host':\n        url[part] = value;\n\n        if (/:\\d+$/.test(value)) {\n          value = value.split(':');\n          url.port = value.pop();\n          url.hostname = value.join(':');\n        } else {\n          url.hostname = value;\n          url.port = '';\n        }\n\n        break;\n\n      case 'protocol':\n        url.protocol = value.toLowerCase();\n        url.slashes = !fn;\n        break;\n\n      case 'pathname':\n      case 'hash':\n        if (value) {\n          var char = part === 'pathname' ? '/' : '#';\n          url[part] = value.charAt(0) !== char ? char + value : value;\n        } else {\n          url[part] = value;\n        }\n\n        break;\n\n      default:\n        url[part] = value;\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var ins = rules[i];\n\n      if (ins[4]) {\n        url[ins[1]] = url[ins[1]].toLowerCase();\n      }\n    }\n\n    url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host ? url.protocol + '//' + url.host : 'null';\n    url.href = url.toString();\n    return url;\n  }\n  /**\n   * Transform the properties back in to a valid and full URL string.\n   *\n   * @param {Function} stringify Optional query stringify function.\n   * @returns {String} Compiled version of the URL.\n   * @public\n   */\n\n\n  function toString(stringify) {\n    if (!stringify || 'function' !== typeof stringify) {\n      stringify = querystringify_1.stringify;\n    }\n\n    var query,\n        url = this,\n        protocol = url.protocol;\n\n    if (protocol && protocol.charAt(protocol.length - 1) !== ':') {\n      protocol += ':';\n    }\n\n    var result = protocol + (url.slashes || isSpecial(url.protocol) ? '//' : '');\n\n    if (url.username) {\n      result += url.username;\n\n      if (url.password) {\n        result += ':' + url.password;\n      }\n\n      result += '@';\n    }\n\n    result += url.host + url.pathname;\n    query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n\n    if (query) {\n      result += '?' !== query.charAt(0) ? '?' + query : query;\n    }\n\n    if (url.hash) {\n      result += url.hash;\n    }\n\n    return result;\n  }\n\n  Url.prototype = {\n    set: set,\n    toString: toString\n  }; //\n  // Expose the URL parser and some additional properties that might be useful for\n  // others or testing.\n  //\n\n  Url.extractProtocol = extractProtocol;\n  Url.location = lolcation;\n  Url.trimLeft = trimLeft;\n  Url.qs = querystringify_1;\n  var urlParse = Url;\n  /*\n   * This delay allows the thread to finish assigning its on* methods\n   * before invoking the delay callback. This is purely a timing hack.\n   * http://geekabyte.blogspot.com/2014/01/javascript-effect-of-setting-settimeout.html\n   *\n   * @param {callback: function} the callback which will be invoked after the timeout\n   * @parma {context: object} the context in which to invoke the function\n   */\n\n  function delay(callback, context) {\n    setTimeout(function (timeoutContext) {\n      return callback.call(timeoutContext);\n    }, 4, context);\n  }\n\n  function log(method, message) {\n    /* eslint-disable no-console */\n    if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'test') {\n      console[method].call(null, message);\n    }\n    /* eslint-enable no-console */\n\n  }\n\n  function reject(array, callback) {\n    if (array === void 0) array = [];\n    var results = [];\n    array.forEach(function (itemInArray) {\n      if (!callback(itemInArray)) {\n        results.push(itemInArray);\n      }\n    });\n    return results;\n  }\n\n  function filter(array, callback) {\n    if (array === void 0) array = [];\n    var results = [];\n    array.forEach(function (itemInArray) {\n      if (callback(itemInArray)) {\n        results.push(itemInArray);\n      }\n    });\n    return results;\n  }\n  /*\n   * EventTarget is an interface implemented by objects that can\n   * receive events and may have listeners for them.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n   */\n\n\n  var EventTarget = function EventTarget() {\n    this.listeners = {};\n  };\n  /*\n   * Ties a listener function to an event type which can later be invoked via the\n   * dispatchEvent method.\n   *\n   * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n   * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n   * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n   */\n\n\n  EventTarget.prototype.addEventListener = function addEventListener(type, listener\n  /* , useCapture */\n  ) {\n    if (typeof listener === 'function') {\n      if (!Array.isArray(this.listeners[type])) {\n        this.listeners[type] = [];\n      } // Only add the same function once\n\n\n      if (filter(this.listeners[type], function (item) {\n        return item === listener;\n      }).length === 0) {\n        this.listeners[type].push(listener);\n      }\n    }\n  };\n  /*\n   * Removes the listener so it will no longer be invoked via the dispatchEvent method.\n   *\n   * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n   * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n   * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n   */\n\n\n  EventTarget.prototype.removeEventListener = function removeEventListener(type, removingListener\n  /* , useCapture */\n  ) {\n    var arrayOfListeners = this.listeners[type];\n    this.listeners[type] = reject(arrayOfListeners, function (listener) {\n      return listener === removingListener;\n    });\n  };\n  /*\n   * Invokes all listener functions that are listening to the given event.type property. Each\n   * listener will be passed the event as the first argument.\n   *\n   * @param {object} event - event object which will be passed to all listeners of the event.type property\n   */\n\n\n  EventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n    var this$1 = this;\n    var customArguments = [],\n        len = arguments.length - 1;\n\n    while (len-- > 0) customArguments[len] = arguments[len + 1];\n\n    var eventName = event.type;\n    var listeners = this.listeners[eventName];\n\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n\n    listeners.forEach(function (listener) {\n      if (customArguments.length > 0) {\n        listener.apply(this$1, customArguments);\n      } else {\n        listener.call(this$1, event);\n      }\n    });\n    return true;\n  };\n\n  function trimQueryPartFromURL(url) {\n    var queryIndex = url.indexOf('?');\n    return queryIndex >= 0 ? url.slice(0, queryIndex) : url;\n  }\n  /*\n   * The network bridge is a way for the mock websocket object to 'communicate' with\n   * all available servers. This is a singleton object so it is important that you\n   * clean up urlMap whenever you are finished.\n   */\n\n\n  var NetworkBridge = function NetworkBridge() {\n    this.urlMap = {};\n  };\n  /*\n   * Attaches a websocket object to the urlMap hash so that it can find the server\n   * it is connected to and the server in turn can find it.\n   *\n   * @param {object} websocket - websocket object to add to the urlMap hash\n   * @param {string} url\n   */\n\n\n  NetworkBridge.prototype.attachWebSocket = function attachWebSocket(websocket, url) {\n    var serverURL = trimQueryPartFromURL(url);\n    var connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) === -1) {\n      connectionLookup.websockets.push(websocket);\n      return connectionLookup.server;\n    }\n  };\n  /*\n   * Attaches a websocket to a room\n   */\n\n\n  NetworkBridge.prototype.addMembershipToRoom = function addMembershipToRoom(websocket, room) {\n    var connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n\n    if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) !== -1) {\n      if (!connectionLookup.roomMemberships[room]) {\n        connectionLookup.roomMemberships[room] = [];\n      }\n\n      connectionLookup.roomMemberships[room].push(websocket);\n    }\n  };\n  /*\n   * Attaches a server object to the urlMap hash so that it can find a websockets\n   * which are connected to it and so that websockets can in turn can find it.\n   *\n   * @param {object} server - server object to add to the urlMap hash\n   * @param {string} url\n   */\n\n\n  NetworkBridge.prototype.attachServer = function attachServer(server, url) {\n    var connectionLookup = this.urlMap[url];\n\n    if (!connectionLookup) {\n      this.urlMap[url] = {\n        server: server,\n        websockets: [],\n        roomMemberships: {}\n      };\n      return server;\n    }\n  };\n  /*\n   * Finds the server which is 'running' on the given url.\n   *\n   * @param {string} url - the url to use to find which server is running on it\n   */\n\n\n  NetworkBridge.prototype.serverLookup = function serverLookup(url) {\n    var serverURL = trimQueryPartFromURL(url);\n    var connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup) {\n      return connectionLookup.server;\n    }\n  };\n  /*\n   * Finds all websockets which is 'listening' on the given url.\n   *\n   * @param {string} url - the url to use to find all websockets which are associated with it\n   * @param {string} room - if a room is provided, will only return sockets in this room\n   * @param {class} broadcaster - socket that is broadcasting and is to be excluded from the lookup\n   */\n\n\n  NetworkBridge.prototype.websocketsLookup = function websocketsLookup(url, room, broadcaster) {\n    var serverURL = trimQueryPartFromURL(url);\n    var websockets;\n    var connectionLookup = this.urlMap[serverURL];\n    websockets = connectionLookup ? connectionLookup.websockets : [];\n\n    if (room) {\n      var members = connectionLookup.roomMemberships[room];\n      websockets = members || [];\n    }\n\n    return broadcaster ? websockets.filter(function (websocket) {\n      return websocket !== broadcaster;\n    }) : websockets;\n  };\n  /*\n   * Removes the entry associated with the url.\n   *\n   * @param {string} url\n   */\n\n\n  NetworkBridge.prototype.removeServer = function removeServer(url) {\n    delete this.urlMap[trimQueryPartFromURL(url)];\n  };\n  /*\n   * Removes the individual websocket from the map of associated websockets.\n   *\n   * @param {object} websocket - websocket object to remove from the url map\n   * @param {string} url\n   */\n\n\n  NetworkBridge.prototype.removeWebSocket = function removeWebSocket(websocket, url) {\n    var serverURL = trimQueryPartFromURL(url);\n    var connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup) {\n      connectionLookup.websockets = reject(connectionLookup.websockets, function (socket) {\n        return socket === websocket;\n      });\n    }\n  };\n  /*\n   * Removes a websocket from a room\n   */\n\n\n  NetworkBridge.prototype.removeMembershipFromRoom = function removeMembershipFromRoom(websocket, room) {\n    var connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n    var memberships = connectionLookup.roomMemberships[room];\n\n    if (connectionLookup && memberships !== null) {\n      connectionLookup.roomMemberships[room] = reject(memberships, function (socket) {\n        return socket === websocket;\n      });\n    }\n  };\n\n  var networkBridge = new NetworkBridge(); // Note: this is a singleton\n\n  /*\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n   */\n\n  var CLOSE_CODES = {\n    CLOSE_NORMAL: 1000,\n    CLOSE_GOING_AWAY: 1001,\n    CLOSE_PROTOCOL_ERROR: 1002,\n    CLOSE_UNSUPPORTED: 1003,\n    CLOSE_NO_STATUS: 1005,\n    CLOSE_ABNORMAL: 1006,\n    UNSUPPORTED_DATA: 1007,\n    POLICY_VIOLATION: 1008,\n    CLOSE_TOO_LARGE: 1009,\n    MISSING_EXTENSION: 1010,\n    INTERNAL_ERROR: 1011,\n    SERVICE_RESTART: 1012,\n    TRY_AGAIN_LATER: 1013,\n    TLS_HANDSHAKE: 1015\n  };\n  var ERROR_PREFIX = {\n    CONSTRUCTOR_ERROR: \"Failed to construct 'WebSocket':\",\n    CLOSE_ERROR: \"Failed to execute 'close' on 'WebSocket':\",\n    EVENT: {\n      CONSTRUCT: \"Failed to construct 'Event':\",\n      MESSAGE: \"Failed to construct 'MessageEvent':\",\n      CLOSE: \"Failed to construct 'CloseEvent':\"\n    }\n  };\n\n  var EventPrototype = function EventPrototype() {};\n\n  EventPrototype.prototype.stopPropagation = function stopPropagation() {};\n\n  EventPrototype.prototype.stopImmediatePropagation = function stopImmediatePropagation() {}; // if no arguments are passed then the type is set to \"undefined\" on\n  // chrome and safari.\n\n\n  EventPrototype.prototype.initEvent = function initEvent(type, bubbles, cancelable) {\n    if (type === void 0) type = 'undefined';\n    if (bubbles === void 0) bubbles = false;\n    if (cancelable === void 0) cancelable = false;\n    this.type = \"\" + type;\n    this.bubbles = Boolean(bubbles);\n    this.cancelable = Boolean(cancelable);\n  };\n\n  var Event = function (EventPrototype$$1) {\n    function Event(type, eventInitConfig) {\n      if (eventInitConfig === void 0) eventInitConfig = {};\n      EventPrototype$$1.call(this);\n\n      if (!type) {\n        throw new TypeError(ERROR_PREFIX.EVENT_ERROR + \" 1 argument required, but only 0 present.\");\n      }\n\n      if (typeof eventInitConfig !== 'object') {\n        throw new TypeError(ERROR_PREFIX.EVENT_ERROR + \" parameter 2 ('eventInitDict') is not an object.\");\n      }\n\n      var bubbles = eventInitConfig.bubbles;\n      var cancelable = eventInitConfig.cancelable;\n      this.type = \"\" + type;\n      this.timeStamp = Date.now();\n      this.target = null;\n      this.srcElement = null;\n      this.returnValue = true;\n      this.isTrusted = false;\n      this.eventPhase = 0;\n      this.defaultPrevented = false;\n      this.currentTarget = null;\n      this.cancelable = cancelable ? Boolean(cancelable) : false;\n      this.canncelBubble = false;\n      this.bubbles = bubbles ? Boolean(bubbles) : false;\n    }\n\n    if (EventPrototype$$1) Event.__proto__ = EventPrototype$$1;\n    Event.prototype = Object.create(EventPrototype$$1 && EventPrototype$$1.prototype);\n    Event.prototype.constructor = Event;\n    return Event;\n  }(EventPrototype);\n\n  var MessageEvent = function (EventPrototype$$1) {\n    function MessageEvent(type, eventInitConfig) {\n      if (eventInitConfig === void 0) eventInitConfig = {};\n      EventPrototype$$1.call(this);\n\n      if (!type) {\n        throw new TypeError(ERROR_PREFIX.EVENT.MESSAGE + \" 1 argument required, but only 0 present.\");\n      }\n\n      if (typeof eventInitConfig !== 'object') {\n        throw new TypeError(ERROR_PREFIX.EVENT.MESSAGE + \" parameter 2 ('eventInitDict') is not an object\");\n      }\n\n      var bubbles = eventInitConfig.bubbles;\n      var cancelable = eventInitConfig.cancelable;\n      var data = eventInitConfig.data;\n      var origin = eventInitConfig.origin;\n      var lastEventId = eventInitConfig.lastEventId;\n      var ports = eventInitConfig.ports;\n      this.type = \"\" + type;\n      this.timeStamp = Date.now();\n      this.target = null;\n      this.srcElement = null;\n      this.returnValue = true;\n      this.isTrusted = false;\n      this.eventPhase = 0;\n      this.defaultPrevented = false;\n      this.currentTarget = null;\n      this.cancelable = cancelable ? Boolean(cancelable) : false;\n      this.canncelBubble = false;\n      this.bubbles = bubbles ? Boolean(bubbles) : false;\n      this.origin = \"\" + origin;\n      this.ports = typeof ports === 'undefined' ? null : ports;\n      this.data = typeof data === 'undefined' ? null : data;\n      this.lastEventId = \"\" + (lastEventId || '');\n    }\n\n    if (EventPrototype$$1) MessageEvent.__proto__ = EventPrototype$$1;\n    MessageEvent.prototype = Object.create(EventPrototype$$1 && EventPrototype$$1.prototype);\n    MessageEvent.prototype.constructor = MessageEvent;\n    return MessageEvent;\n  }(EventPrototype);\n\n  var CloseEvent = function (EventPrototype$$1) {\n    function CloseEvent(type, eventInitConfig) {\n      if (eventInitConfig === void 0) eventInitConfig = {};\n      EventPrototype$$1.call(this);\n\n      if (!type) {\n        throw new TypeError(ERROR_PREFIX.EVENT.CLOSE + \" 1 argument required, but only 0 present.\");\n      }\n\n      if (typeof eventInitConfig !== 'object') {\n        throw new TypeError(ERROR_PREFIX.EVENT.CLOSE + \" parameter 2 ('eventInitDict') is not an object\");\n      }\n\n      var bubbles = eventInitConfig.bubbles;\n      var cancelable = eventInitConfig.cancelable;\n      var code = eventInitConfig.code;\n      var reason = eventInitConfig.reason;\n      var wasClean = eventInitConfig.wasClean;\n      this.type = \"\" + type;\n      this.timeStamp = Date.now();\n      this.target = null;\n      this.srcElement = null;\n      this.returnValue = true;\n      this.isTrusted = false;\n      this.eventPhase = 0;\n      this.defaultPrevented = false;\n      this.currentTarget = null;\n      this.cancelable = cancelable ? Boolean(cancelable) : false;\n      this.cancelBubble = false;\n      this.bubbles = bubbles ? Boolean(bubbles) : false;\n      this.code = typeof code === 'number' ? parseInt(code, 10) : 0;\n      this.reason = \"\" + (reason || '');\n      this.wasClean = wasClean ? Boolean(wasClean) : false;\n    }\n\n    if (EventPrototype$$1) CloseEvent.__proto__ = EventPrototype$$1;\n    CloseEvent.prototype = Object.create(EventPrototype$$1 && EventPrototype$$1.prototype);\n    CloseEvent.prototype.constructor = CloseEvent;\n    return CloseEvent;\n  }(EventPrototype);\n  /*\n   * Creates an Event object and extends it to allow full modification of\n   * its properties.\n   *\n   * @param {object} config - within config you will need to pass type and optionally target\n   */\n\n\n  function createEvent(config) {\n    var type = config.type;\n    var target = config.target;\n    var eventObject = new Event(type);\n\n    if (target) {\n      eventObject.target = target;\n      eventObject.srcElement = target;\n      eventObject.currentTarget = target;\n    }\n\n    return eventObject;\n  }\n  /*\n   * Creates a MessageEvent object and extends it to allow full modification of\n   * its properties.\n   *\n   * @param {object} config - within config: type, origin, data and optionally target\n   */\n\n\n  function createMessageEvent(config) {\n    var type = config.type;\n    var origin = config.origin;\n    var data = config.data;\n    var target = config.target;\n    var messageEvent = new MessageEvent(type, {\n      data: data,\n      origin: origin\n    });\n\n    if (target) {\n      messageEvent.target = target;\n      messageEvent.srcElement = target;\n      messageEvent.currentTarget = target;\n    }\n\n    return messageEvent;\n  }\n  /*\n   * Creates a CloseEvent object and extends it to allow full modification of\n   * its properties.\n   *\n   * @param {object} config - within config: type and optionally target, code, and reason\n   */\n\n\n  function createCloseEvent(config) {\n    var code = config.code;\n    var reason = config.reason;\n    var type = config.type;\n    var target = config.target;\n    var wasClean = config.wasClean;\n\n    if (!wasClean) {\n      wasClean = code === CLOSE_CODES.CLOSE_NORMAL || code === CLOSE_CODES.CLOSE_NO_STATUS;\n    }\n\n    var closeEvent = new CloseEvent(type, {\n      code: code,\n      reason: reason,\n      wasClean: wasClean\n    });\n\n    if (target) {\n      closeEvent.target = target;\n      closeEvent.srcElement = target;\n      closeEvent.currentTarget = target;\n    }\n\n    return closeEvent;\n  }\n\n  function closeWebSocketConnection(context, code, reason) {\n    context.readyState = WebSocket$1.CLOSING;\n    var server = networkBridge.serverLookup(context.url);\n    var closeEvent = createCloseEvent({\n      type: 'close',\n      target: context,\n      code: code,\n      reason: reason\n    });\n    delay(function () {\n      networkBridge.removeWebSocket(context, context.url);\n      context.readyState = WebSocket$1.CLOSED;\n      context.dispatchEvent(closeEvent);\n\n      if (server) {\n        server.dispatchEvent(closeEvent, server);\n      }\n    }, context);\n  }\n\n  function failWebSocketConnection(context, code, reason) {\n    context.readyState = WebSocket$1.CLOSING;\n    var server = networkBridge.serverLookup(context.url);\n    var closeEvent = createCloseEvent({\n      type: 'close',\n      target: context,\n      code: code,\n      reason: reason,\n      wasClean: false\n    });\n    var errorEvent = createEvent({\n      type: 'error',\n      target: context\n    });\n    delay(function () {\n      networkBridge.removeWebSocket(context, context.url);\n      context.readyState = WebSocket$1.CLOSED;\n      context.dispatchEvent(errorEvent);\n      context.dispatchEvent(closeEvent);\n\n      if (server) {\n        server.dispatchEvent(closeEvent, server);\n      }\n    }, context);\n  }\n\n  function normalizeSendData(data) {\n    if (Object.prototype.toString.call(data) !== '[object Blob]' && !(data instanceof ArrayBuffer)) {\n      data = String(data);\n    }\n\n    return data;\n  }\n\n  function proxyFactory(target) {\n    var handler = {\n      get: function get(obj, prop) {\n        if (prop === 'close') {\n          return function close(options) {\n            if (options === void 0) options = {};\n            var code = options.code || CLOSE_CODES.CLOSE_NORMAL;\n            var reason = options.reason || '';\n            closeWebSocketConnection(target, code, reason);\n          };\n        }\n\n        if (prop === 'send') {\n          return function send(data) {\n            data = normalizeSendData(data);\n            target.dispatchEvent(createMessageEvent({\n              type: 'message',\n              data: data,\n              origin: this.url,\n              target: target\n            }));\n          };\n        }\n\n        if (prop === 'on') {\n          return function onWrapper(type, cb) {\n            target.addEventListener(\"server::\" + type, cb);\n          };\n        }\n\n        return obj[prop];\n      }\n    };\n    var proxy = new Proxy(target, handler);\n    return proxy;\n  }\n\n  function lengthInUtf8Bytes(str) {\n    // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n    var m = encodeURIComponent(str).match(/%[89ABab]/g);\n    return str.length + (m ? m.length : 0);\n  }\n\n  function urlVerification(url) {\n    var urlRecord = new urlParse(url);\n    var pathname = urlRecord.pathname;\n    var protocol = urlRecord.protocol;\n    var hash = urlRecord.hash;\n\n    if (!url) {\n      throw new TypeError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" 1 argument required, but only 0 present.\");\n    }\n\n    if (!pathname) {\n      urlRecord.pathname = '/';\n    }\n\n    if (protocol === '') {\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The URL '\" + urlRecord.toString() + \"' is invalid.\");\n    }\n\n    if (protocol !== 'ws:' && protocol !== 'wss:') {\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The URL's scheme must be either 'ws' or 'wss'. '\" + protocol + \"' is not allowed.\");\n    }\n\n    if (hash !== '') {\n      /* eslint-disable max-len */\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The URL contains a fragment identifier ('\" + hash + \"'). Fragment identifiers are not allowed in WebSocket URLs.\");\n      /* eslint-enable max-len */\n    }\n\n    return urlRecord.toString();\n  }\n\n  function protocolVerification(protocols) {\n    if (protocols === void 0) protocols = [];\n\n    if (!Array.isArray(protocols) && typeof protocols !== 'string') {\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The subprotocol '\" + protocols.toString() + \"' is invalid.\");\n    }\n\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    var uniq = protocols.map(function (p) {\n      return {\n        count: 1,\n        protocol: p\n      };\n    }).reduce(function (a, b) {\n      a[b.protocol] = (a[b.protocol] || 0) + b.count;\n      return a;\n    }, {});\n    var duplicates = Object.keys(uniq).filter(function (a) {\n      return uniq[a] > 1;\n    });\n\n    if (duplicates.length > 0) {\n      throw new SyntaxError(ERROR_PREFIX.CONSTRUCTOR_ERROR + \" The subprotocol '\" + duplicates[0] + \"' is duplicated.\");\n    }\n\n    return protocols;\n  }\n  /*\n   * The main websocket class which is designed to mimick the native WebSocket class as close\n   * as possible.\n   *\n   * https://html.spec.whatwg.org/multipage/web-sockets.html\n   */\n\n\n  var WebSocket$1 = function (EventTarget$$1) {\n    function WebSocket(url, protocols) {\n      EventTarget$$1.call(this);\n      this.url = urlVerification(url);\n      protocols = protocolVerification(protocols);\n      this.protocol = protocols[0] || '';\n      this.binaryType = 'blob';\n      this.readyState = WebSocket.CONNECTING;\n      var server = networkBridge.attachWebSocket(this, this.url);\n      /*\n       * This delay is needed so that we dont trigger an event before the callbacks have been\n       * setup. For example:\n       *\n       * var socket = new WebSocket('ws://localhost');\n       *\n       * If we dont have the delay then the event would be triggered right here and this is\n       * before the onopen had a chance to register itself.\n       *\n       * socket.onopen = () => { // this would never be called };\n       *\n       * and with the delay the event gets triggered here after all of the callbacks have been\n       * registered :-)\n       */\n\n      delay(function delayCallback() {\n        if (server) {\n          if (server.options.verifyClient && typeof server.options.verifyClient === 'function' && !server.options.verifyClient()) {\n            this.readyState = WebSocket.CLOSED;\n            log('error', \"WebSocket connection to '\" + this.url + \"' failed: HTTP Authentication failed; no valid credentials available\");\n            networkBridge.removeWebSocket(this, this.url);\n            this.dispatchEvent(createEvent({\n              type: 'error',\n              target: this\n            }));\n            this.dispatchEvent(createCloseEvent({\n              type: 'close',\n              target: this,\n              code: CLOSE_CODES.CLOSE_NORMAL\n            }));\n          } else {\n            if (server.options.selectProtocol && typeof server.options.selectProtocol === 'function') {\n              var selectedProtocol = server.options.selectProtocol(protocols);\n              var isFilled = selectedProtocol !== '';\n              var isRequested = protocols.indexOf(selectedProtocol) !== -1;\n\n              if (isFilled && !isRequested) {\n                this.readyState = WebSocket.CLOSED;\n                log('error', \"WebSocket connection to '\" + this.url + \"' failed: Invalid Sub-Protocol\");\n                networkBridge.removeWebSocket(this, this.url);\n                this.dispatchEvent(createEvent({\n                  type: 'error',\n                  target: this\n                }));\n                this.dispatchEvent(createCloseEvent({\n                  type: 'close',\n                  target: this,\n                  code: CLOSE_CODES.CLOSE_NORMAL\n                }));\n                return;\n              }\n\n              this.protocol = selectedProtocol;\n            }\n\n            this.readyState = WebSocket.OPEN;\n            this.dispatchEvent(createEvent({\n              type: 'open',\n              target: this\n            }));\n            server.dispatchEvent(createEvent({\n              type: 'connection'\n            }), proxyFactory(this));\n          }\n        } else {\n          this.readyState = WebSocket.CLOSED;\n          this.dispatchEvent(createEvent({\n            type: 'error',\n            target: this\n          }));\n          this.dispatchEvent(createCloseEvent({\n            type: 'close',\n            target: this,\n            code: CLOSE_CODES.CLOSE_NORMAL\n          }));\n          log('error', \"WebSocket connection to '\" + this.url + \"' failed\");\n        }\n      }, this);\n    }\n\n    if (EventTarget$$1) WebSocket.__proto__ = EventTarget$$1;\n    WebSocket.prototype = Object.create(EventTarget$$1 && EventTarget$$1.prototype);\n    WebSocket.prototype.constructor = WebSocket;\n    var prototypeAccessors = {\n      onopen: {},\n      onmessage: {},\n      onclose: {},\n      onerror: {}\n    };\n\n    prototypeAccessors.onopen.get = function () {\n      return this.listeners.open;\n    };\n\n    prototypeAccessors.onmessage.get = function () {\n      return this.listeners.message;\n    };\n\n    prototypeAccessors.onclose.get = function () {\n      return this.listeners.close;\n    };\n\n    prototypeAccessors.onerror.get = function () {\n      return this.listeners.error;\n    };\n\n    prototypeAccessors.onopen.set = function (listener) {\n      delete this.listeners.open;\n      this.addEventListener('open', listener);\n    };\n\n    prototypeAccessors.onmessage.set = function (listener) {\n      delete this.listeners.message;\n      this.addEventListener('message', listener);\n    };\n\n    prototypeAccessors.onclose.set = function (listener) {\n      delete this.listeners.close;\n      this.addEventListener('close', listener);\n    };\n\n    prototypeAccessors.onerror.set = function (listener) {\n      delete this.listeners.error;\n      this.addEventListener('error', listener);\n    };\n\n    WebSocket.prototype.send = function send(data) {\n      var this$1 = this;\n\n      if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n        throw new Error('WebSocket is already in CLOSING or CLOSED state');\n      } // TODO: handle bufferedAmount\n\n\n      var messageEvent = createMessageEvent({\n        type: 'server::message',\n        origin: this.url,\n        data: normalizeSendData(data)\n      });\n      var server = networkBridge.serverLookup(this.url);\n\n      if (server) {\n        delay(function () {\n          this$1.dispatchEvent(messageEvent, data);\n        }, server);\n      }\n    };\n\n    WebSocket.prototype.close = function close(code, reason) {\n      if (code !== undefined) {\n        if (typeof code !== 'number' || code !== 1000 && (code < 3000 || code > 4999)) {\n          throw new TypeError(ERROR_PREFIX.CLOSE_ERROR + \" The code must be either 1000, or between 3000 and 4999. \" + code + \" is neither.\");\n        }\n      }\n\n      if (reason !== undefined) {\n        var length = lengthInUtf8Bytes(reason);\n\n        if (length > 123) {\n          throw new SyntaxError(ERROR_PREFIX.CLOSE_ERROR + \" The message must not be greater than 123 bytes.\");\n        }\n      }\n\n      if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n        return;\n      }\n\n      if (this.readyState === WebSocket.CONNECTING) {\n        failWebSocketConnection(this, code || CLOSE_CODES.CLOSE_ABNORMAL, reason);\n      } else {\n        closeWebSocketConnection(this, code || CLOSE_CODES.CLOSE_NO_STATUS, reason);\n      }\n    };\n\n    Object.defineProperties(WebSocket.prototype, prototypeAccessors);\n    return WebSocket;\n  }(EventTarget);\n\n  WebSocket$1.CONNECTING = 0;\n  WebSocket$1.prototype.CONNECTING = WebSocket$1.CONNECTING;\n  WebSocket$1.OPEN = 1;\n  WebSocket$1.prototype.OPEN = WebSocket$1.OPEN;\n  WebSocket$1.CLOSING = 2;\n  WebSocket$1.prototype.CLOSING = WebSocket$1.CLOSING;\n  WebSocket$1.CLOSED = 3;\n  WebSocket$1.prototype.CLOSED = WebSocket$1.CLOSED;\n\n  var dedupe = function (arr) {\n    return arr.reduce(function (deduped, b) {\n      if (deduped.indexOf(b) > -1) {\n        return deduped;\n      }\n\n      return deduped.concat(b);\n    }, []);\n  };\n\n  function retrieveGlobalObject() {\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    return typeof process === 'object' && typeof require === 'function' && typeof global === 'object' ? global : this;\n  }\n\n  var Server$1 = function (EventTarget$$1) {\n    function Server(url, options) {\n      if (options === void 0) options = {};\n      EventTarget$$1.call(this);\n      var urlRecord = new urlParse(url);\n\n      if (!urlRecord.pathname) {\n        urlRecord.pathname = '/';\n      }\n\n      this.url = urlRecord.toString();\n      this.originalWebSocket = null;\n      var server = networkBridge.attachServer(this, this.url);\n\n      if (!server) {\n        this.dispatchEvent(createEvent({\n          type: 'error'\n        }));\n        throw new Error('A mock server is already listening on this url');\n      }\n\n      if (typeof options.verifyClient === 'undefined') {\n        options.verifyClient = null;\n      }\n\n      if (typeof options.selectProtocol === 'undefined') {\n        options.selectProtocol = null;\n      }\n\n      this.options = options;\n      this.start();\n    }\n\n    if (EventTarget$$1) Server.__proto__ = EventTarget$$1;\n    Server.prototype = Object.create(EventTarget$$1 && EventTarget$$1.prototype);\n    Server.prototype.constructor = Server;\n    /*\n     * Attaches the mock websocket object to the global object\n     */\n\n    Server.prototype.start = function start() {\n      var globalObj = retrieveGlobalObject();\n\n      if (globalObj.WebSocket) {\n        this.originalWebSocket = globalObj.WebSocket;\n      }\n\n      globalObj.WebSocket = WebSocket$1;\n    };\n    /*\n     * Removes the mock websocket object from the global object\n     */\n\n\n    Server.prototype.stop = function stop(callback) {\n      if (callback === void 0) callback = function () {};\n      var globalObj = retrieveGlobalObject();\n\n      if (this.originalWebSocket) {\n        globalObj.WebSocket = this.originalWebSocket;\n      } else {\n        delete globalObj.WebSocket;\n      }\n\n      this.originalWebSocket = null;\n      networkBridge.removeServer(this.url);\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    };\n    /*\n     * This is the main function for the mock server to subscribe to the on events.\n     *\n     * ie: mockServer.on('connection', function() { console.log('a mock client connected'); });\n     *\n     * @param {string} type - The event key to subscribe to. Valid keys are: connection, message, and close.\n     * @param {function} callback - The callback which should be called when a certain event is fired.\n     */\n\n\n    Server.prototype.on = function on(type, callback) {\n      this.addEventListener(type, callback);\n    };\n    /*\n     * Closes the connection and triggers the onclose method of all listening\n     * websockets. After that it removes itself from the urlMap so another server\n     * could add itself to the url.\n     *\n     * @param {object} options\n     */\n\n\n    Server.prototype.close = function close(options) {\n      if (options === void 0) options = {};\n      var code = options.code;\n      var reason = options.reason;\n      var wasClean = options.wasClean;\n      var listeners = networkBridge.websocketsLookup(this.url); // Remove server before notifications to prevent immediate reconnects from\n      // socket onclose handlers\n\n      networkBridge.removeServer(this.url);\n      listeners.forEach(function (socket) {\n        socket.readyState = WebSocket$1.CLOSED;\n        socket.dispatchEvent(createCloseEvent({\n          type: 'close',\n          target: socket,\n          code: code || CLOSE_CODES.CLOSE_NORMAL,\n          reason: reason || '',\n          wasClean: wasClean\n        }));\n      });\n      this.dispatchEvent(createCloseEvent({\n        type: 'close'\n      }), this);\n    };\n    /*\n     * Sends a generic message event to all mock clients.\n     */\n\n\n    Server.prototype.emit = function emit(event, data, options) {\n      var this$1 = this;\n      if (options === void 0) options = {};\n      var websockets = options.websockets;\n\n      if (!websockets) {\n        websockets = networkBridge.websocketsLookup(this.url);\n      }\n\n      if (typeof options !== 'object' || arguments.length > 3) {\n        data = Array.prototype.slice.call(arguments, 1, arguments.length);\n        data = data.map(function (item) {\n          return normalizeSendData(item);\n        });\n      } else {\n        data = normalizeSendData(data);\n      }\n\n      websockets.forEach(function (socket) {\n        if (Array.isArray(data)) {\n          socket.dispatchEvent.apply(socket, [createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket\n          })].concat(data));\n        } else {\n          socket.dispatchEvent(createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket\n          }));\n        }\n      });\n    };\n    /*\n     * Returns an array of websockets which are listening to this server\n     * TOOD: this should return a set and not be a method\n     */\n\n\n    Server.prototype.clients = function clients() {\n      return networkBridge.websocketsLookup(this.url);\n    };\n    /*\n     * Prepares a method to submit an event to members of the room\n     *\n     * e.g. server.to('my-room').emit('hi!');\n     */\n\n\n    Server.prototype.to = function to(room, broadcaster, broadcastList) {\n      var this$1 = this;\n      if (broadcastList === void 0) broadcastList = [];\n      var self = this;\n      var websockets = dedupe(broadcastList.concat(networkBridge.websocketsLookup(this.url, room, broadcaster)));\n      return {\n        to: function (chainedRoom, chainedBroadcaster) {\n          return this$1.to.call(this$1, chainedRoom, chainedBroadcaster, websockets);\n        },\n        emit: function emit(event, data) {\n          self.emit(event, data, {\n            websockets: websockets\n          });\n        }\n      };\n    };\n    /*\n     * Alias for Server.to\n     */\n\n\n    Server.prototype.in = function in$1() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      return this.to.apply(null, args);\n    };\n    /*\n     * Simulate an event from the server to the clients. Useful for\n     * simulating errors.\n     */\n\n\n    Server.prototype.simulate = function simulate(event) {\n      var listeners = networkBridge.websocketsLookup(this.url);\n\n      if (event === 'error') {\n        listeners.forEach(function (socket) {\n          socket.readyState = WebSocket$1.CLOSED;\n          socket.dispatchEvent(createEvent({\n            type: 'error'\n          }));\n        });\n      }\n    };\n\n    return Server;\n  }(EventTarget);\n  /*\n   * Alternative constructor to support namespaces in socket.io\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#custom-namespaces\n   */\n\n\n  Server$1.of = function of(url) {\n    return new Server$1(url);\n  };\n  /*\n   * The socket-io class is designed to mimick the real API as closely as possible.\n   *\n   * http://socket.io/docs/\n   */\n\n\n  var SocketIO$1 = function (EventTarget$$1) {\n    function SocketIO(url, protocol) {\n      var this$1 = this;\n      if (url === void 0) url = 'socket.io';\n      if (protocol === void 0) protocol = '';\n      EventTarget$$1.call(this);\n      this.binaryType = 'blob';\n      var urlRecord = new urlParse(url);\n\n      if (!urlRecord.pathname) {\n        urlRecord.pathname = '/';\n      }\n\n      this.url = urlRecord.toString();\n      this.readyState = SocketIO.CONNECTING;\n      this.protocol = '';\n\n      if (typeof protocol === 'string' || typeof protocol === 'object' && protocol !== null) {\n        this.protocol = protocol;\n      } else if (Array.isArray(protocol) && protocol.length > 0) {\n        this.protocol = protocol[0];\n      }\n\n      var server = networkBridge.attachWebSocket(this, this.url);\n      /*\n       * Delay triggering the connection events so they can be defined in time.\n       */\n\n      delay(function delayCallback() {\n        if (server) {\n          this.readyState = SocketIO.OPEN;\n          server.dispatchEvent(createEvent({\n            type: 'connection'\n          }), server, this);\n          server.dispatchEvent(createEvent({\n            type: 'connect'\n          }), server, this); // alias\n\n          this.dispatchEvent(createEvent({\n            type: 'connect',\n            target: this\n          }));\n        } else {\n          this.readyState = SocketIO.CLOSED;\n          this.dispatchEvent(createEvent({\n            type: 'error',\n            target: this\n          }));\n          this.dispatchEvent(createCloseEvent({\n            type: 'close',\n            target: this,\n            code: CLOSE_CODES.CLOSE_NORMAL\n          }));\n          log('error', \"Socket.io connection to '\" + this.url + \"' failed\");\n        }\n      }, this);\n      /**\n        Add an aliased event listener for close / disconnect\n       */\n\n      this.addEventListener('close', function (event) {\n        this$1.dispatchEvent(createCloseEvent({\n          type: 'disconnect',\n          target: event.target,\n          code: event.code\n        }));\n      });\n    }\n\n    if (EventTarget$$1) SocketIO.__proto__ = EventTarget$$1;\n    SocketIO.prototype = Object.create(EventTarget$$1 && EventTarget$$1.prototype);\n    SocketIO.prototype.constructor = SocketIO;\n    var prototypeAccessors = {\n      broadcast: {}\n    };\n    /*\n     * Closes the SocketIO connection or connection attempt, if any.\n     * If the connection is already CLOSED, this method does nothing.\n     */\n\n    SocketIO.prototype.close = function close() {\n      if (this.readyState !== SocketIO.OPEN) {\n        return undefined;\n      }\n\n      var server = networkBridge.serverLookup(this.url);\n      networkBridge.removeWebSocket(this, this.url);\n      this.readyState = SocketIO.CLOSED;\n      this.dispatchEvent(createCloseEvent({\n        type: 'close',\n        target: this,\n        code: CLOSE_CODES.CLOSE_NORMAL\n      }));\n\n      if (server) {\n        server.dispatchEvent(createCloseEvent({\n          type: 'disconnect',\n          target: this,\n          code: CLOSE_CODES.CLOSE_NORMAL\n        }), server);\n      }\n\n      return this;\n    };\n    /*\n     * Alias for Socket#close\n     *\n     * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L383\n     */\n\n\n    SocketIO.prototype.disconnect = function disconnect() {\n      return this.close();\n    };\n    /*\n     * Submits an event to the server with a payload\n     */\n\n\n    SocketIO.prototype.emit = function emit(event) {\n      var data = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) data[len] = arguments[len + 1];\n\n      if (this.readyState !== SocketIO.OPEN) {\n        throw new Error('SocketIO is already in CLOSING or CLOSED state');\n      }\n\n      var messageEvent = createMessageEvent({\n        type: event,\n        origin: this.url,\n        data: data\n      });\n      var server = networkBridge.serverLookup(this.url);\n\n      if (server) {\n        server.dispatchEvent.apply(server, [messageEvent].concat(data));\n      }\n\n      return this;\n    };\n    /*\n     * Submits a 'message' event to the server.\n     *\n     * Should behave exactly like WebSocket#send\n     *\n     * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L113\n     */\n\n\n    SocketIO.prototype.send = function send(data) {\n      this.emit('message', data);\n      return this;\n    };\n    /*\n     * For broadcasting events to other connected sockets.\n     *\n     * e.g. socket.broadcast.emit('hi!');\n     * e.g. socket.broadcast.to('my-room').emit('hi!');\n     */\n\n\n    prototypeAccessors.broadcast.get = function () {\n      if (this.readyState !== SocketIO.OPEN) {\n        throw new Error('SocketIO is already in CLOSING or CLOSED state');\n      }\n\n      var self = this;\n      var server = networkBridge.serverLookup(this.url);\n\n      if (!server) {\n        throw new Error(\"SocketIO can not find a server at the specified URL (\" + this.url + \")\");\n      }\n\n      return {\n        emit: function emit(event, data) {\n          server.emit(event, data, {\n            websockets: networkBridge.websocketsLookup(self.url, null, self)\n          });\n          return self;\n        },\n        to: function to(room) {\n          return server.to(room, self);\n        },\n        in: function in$1(room) {\n          return server.in(room, self);\n        }\n      };\n    };\n    /*\n     * For registering events to be received from the server\n     */\n\n\n    SocketIO.prototype.on = function on(type, callback) {\n      this.addEventListener(type, callback);\n      return this;\n    };\n    /*\n     * Remove event listener\n     *\n     * https://github.com/component/emitter#emitteroffevent-fn\n     */\n\n\n    SocketIO.prototype.off = function off(type, callback) {\n      this.removeEventListener(type, callback);\n    };\n    /*\n     * Check if listeners have already been added for an event\n     *\n     * https://github.com/component/emitter#emitterhaslistenersevent\n     */\n\n\n    SocketIO.prototype.hasListeners = function hasListeners(type) {\n      var listeners = this.listeners[type];\n\n      if (!Array.isArray(listeners)) {\n        return false;\n      }\n\n      return !!listeners.length;\n    };\n    /*\n     * Join a room on a server\n     *\n     * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n     */\n\n\n    SocketIO.prototype.join = function join(room) {\n      networkBridge.addMembershipToRoom(this, room);\n    };\n    /*\n     * Get the websocket to leave the room\n     *\n     * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n     */\n\n\n    SocketIO.prototype.leave = function leave(room) {\n      networkBridge.removeMembershipFromRoom(this, room);\n    };\n\n    SocketIO.prototype.to = function to(room) {\n      return this.broadcast.to(room);\n    };\n\n    SocketIO.prototype.in = function in$1() {\n      return this.to.apply(null, arguments);\n    };\n    /*\n     * Invokes all listener functions that are listening to the given event.type property. Each\n     * listener will be passed the event as the first argument.\n     *\n     * @param {object} event - event object which will be passed to all listeners of the event.type property\n     */\n\n\n    SocketIO.prototype.dispatchEvent = function dispatchEvent(event) {\n      var this$1 = this;\n      var customArguments = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) customArguments[len] = arguments[len + 1];\n\n      var eventName = event.type;\n      var listeners = this.listeners[eventName];\n\n      if (!Array.isArray(listeners)) {\n        return false;\n      }\n\n      listeners.forEach(function (listener) {\n        if (customArguments.length > 0) {\n          listener.apply(this$1, customArguments);\n        } else {\n          // Regular WebSockets expect a MessageEvent but Socketio.io just wants raw data\n          //  payload instanceof MessageEvent works, but you can't isntance of NodeEvent\n          //  for now we detect if the output has data defined on it\n          listener.call(this$1, event.data ? event.data : event);\n        }\n      });\n    };\n\n    Object.defineProperties(SocketIO.prototype, prototypeAccessors);\n    return SocketIO;\n  }(EventTarget);\n\n  SocketIO$1.CONNECTING = 0;\n  SocketIO$1.OPEN = 1;\n  SocketIO$1.CLOSING = 2;\n  SocketIO$1.CLOSED = 3;\n  /*\n   * Static constructor methods for the IO Socket\n   */\n\n  var IO = function ioConstructor(url, protocol) {\n    return new SocketIO$1(url, protocol);\n  };\n  /*\n   * Alias the raw IO() constructor\n   */\n\n\n  IO.connect = function ioConnect(url, protocol) {\n    /* eslint-disable new-cap */\n    return IO(url, protocol);\n    /* eslint-enable new-cap */\n  };\n\n  var Server = Server$1;\n  var WebSocket = WebSocket$1;\n  var SocketIO = IO;\n  exports.Server = Server;\n  exports.WebSocket = WebSocket;\n  exports.SocketIO = SocketIO;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/selamhabteab/Desktop/Projects/redux/community-board/node_modules/mock-socket/dist/mock-socket.js"],"names":["global","factory","exports","module","define","amd","Mock","commonjsGlobal","window","self","requiresPort","required","port","protocol","split","has","Object","prototype","hasOwnProperty","undef","decode","input","decodeURIComponent","replace","e","encode","encodeURIComponent","querystring","query","parser","result","part","exec","key","value","querystringify","obj","prefix","pairs","call","isNaN","push","length","join","stringify","parse","querystringify_1","slashes","protocolre","whitespace","left","RegExp","trimLeft","str","toString","rules","sanitize","address","url","isSpecial","NaN","undefined","ignore","hash","lolcation","loc","globalVar","location","finaldestination","type","Url","unescape","pathname","test","href","scheme","extractProtocol","match","toLowerCase","forwardSlashes","otherSlashes","slashesCount","rest","slice","resolve","relative","base","path","concat","i","last","unshift","up","splice","extracted","instruction","index","instructions","indexOf","charAt","host","hostname","username","password","auth","origin","set","fn","pop","char","ins","qs","urlParse","delay","callback","context","setTimeout","timeoutContext","log","method","message","process","env","NODE_ENV","console","reject","array","results","forEach","itemInArray","filter","EventTarget","listeners","addEventListener","listener","Array","isArray","item","removeEventListener","removingListener","arrayOfListeners","dispatchEvent","event","this$1","customArguments","len","arguments","eventName","apply","trimQueryPartFromURL","queryIndex","NetworkBridge","urlMap","attachWebSocket","websocket","serverURL","connectionLookup","server","websockets","addMembershipToRoom","room","roomMemberships","attachServer","serverLookup","websocketsLookup","broadcaster","members","removeServer","removeWebSocket","socket","removeMembershipFromRoom","memberships","networkBridge","CLOSE_CODES","CLOSE_NORMAL","CLOSE_GOING_AWAY","CLOSE_PROTOCOL_ERROR","CLOSE_UNSUPPORTED","CLOSE_NO_STATUS","CLOSE_ABNORMAL","UNSUPPORTED_DATA","POLICY_VIOLATION","CLOSE_TOO_LARGE","MISSING_EXTENSION","INTERNAL_ERROR","SERVICE_RESTART","TRY_AGAIN_LATER","TLS_HANDSHAKE","ERROR_PREFIX","CONSTRUCTOR_ERROR","CLOSE_ERROR","EVENT","CONSTRUCT","MESSAGE","CLOSE","EventPrototype","stopPropagation","stopImmediatePropagation","initEvent","bubbles","cancelable","Boolean","Event","EventPrototype$$1","eventInitConfig","TypeError","EVENT_ERROR","timeStamp","Date","now","target","srcElement","returnValue","isTrusted","eventPhase","defaultPrevented","currentTarget","canncelBubble","__proto__","create","constructor","MessageEvent","data","lastEventId","ports","CloseEvent","code","reason","wasClean","cancelBubble","parseInt","createEvent","config","eventObject","createMessageEvent","messageEvent","createCloseEvent","closeEvent","closeWebSocketConnection","readyState","WebSocket$1","CLOSING","CLOSED","failWebSocketConnection","errorEvent","normalizeSendData","ArrayBuffer","String","proxyFactory","handler","get","prop","close","options","send","onWrapper","cb","proxy","Proxy","lengthInUtf8Bytes","m","urlVerification","urlRecord","SyntaxError","protocolVerification","protocols","uniq","map","p","count","reduce","a","b","duplicates","keys","EventTarget$$1","WebSocket","binaryType","CONNECTING","delayCallback","verifyClient","selectProtocol","selectedProtocol","isFilled","isRequested","OPEN","prototypeAccessors","onopen","onmessage","onclose","onerror","open","error","Error","defineProperties","dedupe","arr","deduped","retrieveGlobalObject","require","Server$1","Server","originalWebSocket","start","globalObj","stop","on","emit","clients","to","broadcastList","chainedRoom","chainedBroadcaster","in","in$1","args","simulate","of","SocketIO$1","SocketIO","broadcast","disconnect","off","hasListeners","leave","IO","ioConstructor","connect","ioConnect","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.Mock = global.Mock || {})));\n}(this, (function (exports) { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nvar requiresPort = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) { return false; }\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\nvar has = Object.prototype.hasOwnProperty;\nvar undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) { continue; }\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) { prefix = '?'; }\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) { continue; }\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nvar stringify = querystringify;\nvar parse = querystring;\n\nvar querystringify_1 = {\n\tstringify: stringify,\n\tparse: parse\n};\n\nvar slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\nvar protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i;\nvar whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]';\nvar left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') { globalVar = window; }\n  else if (typeof commonjsGlobal !== 'undefined') { globalVar = commonjsGlobal; }\n  else if (typeof self !== 'undefined') { globalVar = self; }\n  else { globalVar = {}; }\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) { delete finaldestination[key]; }\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) { continue; }\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4];\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') { return base; }\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) { unshift = true; }\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) { path.unshift(''); }\n  if (last === '.' || last === '..') { path.push(''); }\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) { parser = querystringify_1.parse; }\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    url.protocol === 'file:' ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) { url[key] = url[key].toLowerCase(); }\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) { url.query = parser(url.query); }\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!requiresPort(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || querystringify_1.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!requiresPort(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) { value += ':'+ url.port; }\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) { url[ins[1]] = url[ins[1]].toLowerCase(); }\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) { stringify = querystringify_1.stringify; }\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') { protocol += ':'; }\n\n  var result = protocol + (url.slashes || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) { result += ':'+ url.password; }\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) { result += '?' !== query.charAt(0) ? '?'+ query : query; }\n\n  if (url.hash) { result += url.hash; }\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = querystringify_1;\n\nvar urlParse = Url;\n\n/*\n * This delay allows the thread to finish assigning its on* methods\n * before invoking the delay callback. This is purely a timing hack.\n * http://geekabyte.blogspot.com/2014/01/javascript-effect-of-setting-settimeout.html\n *\n * @param {callback: function} the callback which will be invoked after the timeout\n * @parma {context: object} the context in which to invoke the function\n */\nfunction delay(callback, context) {\n  setTimeout(function (timeoutContext) { return callback.call(timeoutContext); }, 4, context);\n}\n\nfunction log(method, message) {\n  /* eslint-disable no-console */\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'test') {\n    console[method].call(null, message);\n  }\n  /* eslint-enable no-console */\n}\n\nfunction reject(array, callback) {\n  if ( array === void 0 ) array = [];\n\n  var results = [];\n  array.forEach(function (itemInArray) {\n    if (!callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n\nfunction filter(array, callback) {\n  if ( array === void 0 ) array = [];\n\n  var results = [];\n  array.forEach(function (itemInArray) {\n    if (callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n\n/*\n * EventTarget is an interface implemented by objects that can\n * receive events and may have listeners for them.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n */\nvar EventTarget = function EventTarget() {\n  this.listeners = {};\n};\n\n/*\n * Ties a listener function to an event type which can later be invoked via the\n * dispatchEvent method.\n *\n * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n */\nEventTarget.prototype.addEventListener = function addEventListener (type, listener /* , useCapture */) {\n  if (typeof listener === 'function') {\n    if (!Array.isArray(this.listeners[type])) {\n      this.listeners[type] = [];\n    }\n\n    // Only add the same function once\n    if (filter(this.listeners[type], function (item) { return item === listener; }).length === 0) {\n      this.listeners[type].push(listener);\n    }\n  }\n};\n\n/*\n * Removes the listener so it will no longer be invoked via the dispatchEvent method.\n *\n * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n */\nEventTarget.prototype.removeEventListener = function removeEventListener (type, removingListener /* , useCapture */) {\n  var arrayOfListeners = this.listeners[type];\n  this.listeners[type] = reject(arrayOfListeners, function (listener) { return listener === removingListener; });\n};\n\n/*\n * Invokes all listener functions that are listening to the given event.type property. Each\n * listener will be passed the event as the first argument.\n *\n * @param {object} event - event object which will be passed to all listeners of the event.type property\n */\nEventTarget.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n    var customArguments = [], len = arguments.length - 1;\n    while ( len-- > 0 ) customArguments[ len ] = arguments[ len + 1 ];\n\n  var eventName = event.type;\n  var listeners = this.listeners[eventName];\n\n  if (!Array.isArray(listeners)) {\n    return false;\n  }\n\n  listeners.forEach(function (listener) {\n    if (customArguments.length > 0) {\n      listener.apply(this$1, customArguments);\n    } else {\n      listener.call(this$1, event);\n    }\n  });\n\n  return true;\n};\n\nfunction trimQueryPartFromURL(url) {\n  var queryIndex = url.indexOf('?');\n  return queryIndex >= 0 ? url.slice(0, queryIndex) : url;\n}\n\n/*\n * The network bridge is a way for the mock websocket object to 'communicate' with\n * all available servers. This is a singleton object so it is important that you\n * clean up urlMap whenever you are finished.\n */\nvar NetworkBridge = function NetworkBridge() {\n  this.urlMap = {};\n};\n\n/*\n * Attaches a websocket object to the urlMap hash so that it can find the server\n * it is connected to and the server in turn can find it.\n *\n * @param {object} websocket - websocket object to add to the urlMap hash\n * @param {string} url\n */\nNetworkBridge.prototype.attachWebSocket = function attachWebSocket (websocket, url) {\n  var serverURL = trimQueryPartFromURL(url);\n  var connectionLookup = this.urlMap[serverURL];\n\n  if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) === -1) {\n    connectionLookup.websockets.push(websocket);\n    return connectionLookup.server;\n  }\n};\n\n/*\n * Attaches a websocket to a room\n */\nNetworkBridge.prototype.addMembershipToRoom = function addMembershipToRoom (websocket, room) {\n  var connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n\n  if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) !== -1) {\n    if (!connectionLookup.roomMemberships[room]) {\n      connectionLookup.roomMemberships[room] = [];\n    }\n\n    connectionLookup.roomMemberships[room].push(websocket);\n  }\n};\n\n/*\n * Attaches a server object to the urlMap hash so that it can find a websockets\n * which are connected to it and so that websockets can in turn can find it.\n *\n * @param {object} server - server object to add to the urlMap hash\n * @param {string} url\n */\nNetworkBridge.prototype.attachServer = function attachServer (server, url) {\n  var connectionLookup = this.urlMap[url];\n\n  if (!connectionLookup) {\n    this.urlMap[url] = {\n      server: server,\n      websockets: [],\n      roomMemberships: {}\n    };\n\n    return server;\n  }\n};\n\n/*\n * Finds the server which is 'running' on the given url.\n *\n * @param {string} url - the url to use to find which server is running on it\n */\nNetworkBridge.prototype.serverLookup = function serverLookup (url) {\n  var serverURL = trimQueryPartFromURL(url);\n  var connectionLookup = this.urlMap[serverURL];\n\n  if (connectionLookup) {\n    return connectionLookup.server;\n  }\n};\n\n/*\n * Finds all websockets which is 'listening' on the given url.\n *\n * @param {string} url - the url to use to find all websockets which are associated with it\n * @param {string} room - if a room is provided, will only return sockets in this room\n * @param {class} broadcaster - socket that is broadcasting and is to be excluded from the lookup\n */\nNetworkBridge.prototype.websocketsLookup = function websocketsLookup (url, room, broadcaster) {\n  var serverURL = trimQueryPartFromURL(url);\n  var websockets;\n  var connectionLookup = this.urlMap[serverURL];\n\n  websockets = connectionLookup ? connectionLookup.websockets : [];\n\n  if (room) {\n    var members = connectionLookup.roomMemberships[room];\n    websockets = members || [];\n  }\n\n  return broadcaster ? websockets.filter(function (websocket) { return websocket !== broadcaster; }) : websockets;\n};\n\n/*\n * Removes the entry associated with the url.\n *\n * @param {string} url\n */\nNetworkBridge.prototype.removeServer = function removeServer (url) {\n  delete this.urlMap[trimQueryPartFromURL(url)];\n};\n\n/*\n * Removes the individual websocket from the map of associated websockets.\n *\n * @param {object} websocket - websocket object to remove from the url map\n * @param {string} url\n */\nNetworkBridge.prototype.removeWebSocket = function removeWebSocket (websocket, url) {\n  var serverURL = trimQueryPartFromURL(url);\n  var connectionLookup = this.urlMap[serverURL];\n\n  if (connectionLookup) {\n    connectionLookup.websockets = reject(connectionLookup.websockets, function (socket) { return socket === websocket; });\n  }\n};\n\n/*\n * Removes a websocket from a room\n */\nNetworkBridge.prototype.removeMembershipFromRoom = function removeMembershipFromRoom (websocket, room) {\n  var connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n  var memberships = connectionLookup.roomMemberships[room];\n\n  if (connectionLookup && memberships !== null) {\n    connectionLookup.roomMemberships[room] = reject(memberships, function (socket) { return socket === websocket; });\n  }\n};\n\nvar networkBridge = new NetworkBridge(); // Note: this is a singleton\n\n/*\n * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n */\nvar CLOSE_CODES = {\n  CLOSE_NORMAL: 1000,\n  CLOSE_GOING_AWAY: 1001,\n  CLOSE_PROTOCOL_ERROR: 1002,\n  CLOSE_UNSUPPORTED: 1003,\n  CLOSE_NO_STATUS: 1005,\n  CLOSE_ABNORMAL: 1006,\n  UNSUPPORTED_DATA: 1007,\n  POLICY_VIOLATION: 1008,\n  CLOSE_TOO_LARGE: 1009,\n  MISSING_EXTENSION: 1010,\n  INTERNAL_ERROR: 1011,\n  SERVICE_RESTART: 1012,\n  TRY_AGAIN_LATER: 1013,\n  TLS_HANDSHAKE: 1015\n};\n\nvar ERROR_PREFIX = {\n  CONSTRUCTOR_ERROR: \"Failed to construct 'WebSocket':\",\n  CLOSE_ERROR: \"Failed to execute 'close' on 'WebSocket':\",\n  EVENT: {\n    CONSTRUCT: \"Failed to construct 'Event':\",\n    MESSAGE: \"Failed to construct 'MessageEvent':\",\n    CLOSE: \"Failed to construct 'CloseEvent':\"\n  }\n};\n\nvar EventPrototype = function EventPrototype () {};\n\nEventPrototype.prototype.stopPropagation = function stopPropagation () {};\nEventPrototype.prototype.stopImmediatePropagation = function stopImmediatePropagation () {};\n\n// if no arguments are passed then the type is set to \"undefined\" on\n// chrome and safari.\nEventPrototype.prototype.initEvent = function initEvent (type, bubbles, cancelable) {\n    if ( type === void 0 ) type = 'undefined';\n    if ( bubbles === void 0 ) bubbles = false;\n    if ( cancelable === void 0 ) cancelable = false;\n\n  this.type = \"\" + type;\n  this.bubbles = Boolean(bubbles);\n  this.cancelable = Boolean(cancelable);\n};\n\nvar Event = (function (EventPrototype$$1) {\n  function Event(type, eventInitConfig) {\n    if ( eventInitConfig === void 0 ) eventInitConfig = {};\n\n    EventPrototype$$1.call(this);\n\n    if (!type) {\n      throw new TypeError(((ERROR_PREFIX.EVENT_ERROR) + \" 1 argument required, but only 0 present.\"));\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(((ERROR_PREFIX.EVENT_ERROR) + \" parameter 2 ('eventInitDict') is not an object.\"));\n    }\n\n    var bubbles = eventInitConfig.bubbles;\n    var cancelable = eventInitConfig.cancelable;\n\n    this.type = \"\" + type;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.canncelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n  }\n\n  if ( EventPrototype$$1 ) Event.__proto__ = EventPrototype$$1;\n  Event.prototype = Object.create( EventPrototype$$1 && EventPrototype$$1.prototype );\n  Event.prototype.constructor = Event;\n\n  return Event;\n}(EventPrototype));\n\nvar MessageEvent = (function (EventPrototype$$1) {\n  function MessageEvent(type, eventInitConfig) {\n    if ( eventInitConfig === void 0 ) eventInitConfig = {};\n\n    EventPrototype$$1.call(this);\n\n    if (!type) {\n      throw new TypeError(((ERROR_PREFIX.EVENT.MESSAGE) + \" 1 argument required, but only 0 present.\"));\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(((ERROR_PREFIX.EVENT.MESSAGE) + \" parameter 2 ('eventInitDict') is not an object\"));\n    }\n\n    var bubbles = eventInitConfig.bubbles;\n    var cancelable = eventInitConfig.cancelable;\n    var data = eventInitConfig.data;\n    var origin = eventInitConfig.origin;\n    var lastEventId = eventInitConfig.lastEventId;\n    var ports = eventInitConfig.ports;\n\n    this.type = \"\" + type;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.canncelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.origin = \"\" + origin;\n    this.ports = typeof ports === 'undefined' ? null : ports;\n    this.data = typeof data === 'undefined' ? null : data;\n    this.lastEventId = \"\" + (lastEventId || '');\n  }\n\n  if ( EventPrototype$$1 ) MessageEvent.__proto__ = EventPrototype$$1;\n  MessageEvent.prototype = Object.create( EventPrototype$$1 && EventPrototype$$1.prototype );\n  MessageEvent.prototype.constructor = MessageEvent;\n\n  return MessageEvent;\n}(EventPrototype));\n\nvar CloseEvent = (function (EventPrototype$$1) {\n  function CloseEvent(type, eventInitConfig) {\n    if ( eventInitConfig === void 0 ) eventInitConfig = {};\n\n    EventPrototype$$1.call(this);\n\n    if (!type) {\n      throw new TypeError(((ERROR_PREFIX.EVENT.CLOSE) + \" 1 argument required, but only 0 present.\"));\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(((ERROR_PREFIX.EVENT.CLOSE) + \" parameter 2 ('eventInitDict') is not an object\"));\n    }\n\n    var bubbles = eventInitConfig.bubbles;\n    var cancelable = eventInitConfig.cancelable;\n    var code = eventInitConfig.code;\n    var reason = eventInitConfig.reason;\n    var wasClean = eventInitConfig.wasClean;\n\n    this.type = \"\" + type;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.cancelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.code = typeof code === 'number' ? parseInt(code, 10) : 0;\n    this.reason = \"\" + (reason || '');\n    this.wasClean = wasClean ? Boolean(wasClean) : false;\n  }\n\n  if ( EventPrototype$$1 ) CloseEvent.__proto__ = EventPrototype$$1;\n  CloseEvent.prototype = Object.create( EventPrototype$$1 && EventPrototype$$1.prototype );\n  CloseEvent.prototype.constructor = CloseEvent;\n\n  return CloseEvent;\n}(EventPrototype));\n\n/*\n * Creates an Event object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config you will need to pass type and optionally target\n */\nfunction createEvent(config) {\n  var type = config.type;\n  var target = config.target;\n  var eventObject = new Event(type);\n\n  if (target) {\n    eventObject.target = target;\n    eventObject.srcElement = target;\n    eventObject.currentTarget = target;\n  }\n\n  return eventObject;\n}\n\n/*\n * Creates a MessageEvent object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config: type, origin, data and optionally target\n */\nfunction createMessageEvent(config) {\n  var type = config.type;\n  var origin = config.origin;\n  var data = config.data;\n  var target = config.target;\n  var messageEvent = new MessageEvent(type, {\n    data: data,\n    origin: origin\n  });\n\n  if (target) {\n    messageEvent.target = target;\n    messageEvent.srcElement = target;\n    messageEvent.currentTarget = target;\n  }\n\n  return messageEvent;\n}\n\n/*\n * Creates a CloseEvent object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config: type and optionally target, code, and reason\n */\nfunction createCloseEvent(config) {\n  var code = config.code;\n  var reason = config.reason;\n  var type = config.type;\n  var target = config.target;\n  var wasClean = config.wasClean;\n\n  if (!wasClean) {\n    wasClean = code === CLOSE_CODES.CLOSE_NORMAL || code === CLOSE_CODES.CLOSE_NO_STATUS;\n  }\n\n  var closeEvent = new CloseEvent(type, {\n    code: code,\n    reason: reason,\n    wasClean: wasClean\n  });\n\n  if (target) {\n    closeEvent.target = target;\n    closeEvent.srcElement = target;\n    closeEvent.currentTarget = target;\n  }\n\n  return closeEvent;\n}\n\nfunction closeWebSocketConnection(context, code, reason) {\n  context.readyState = WebSocket$1.CLOSING;\n\n  var server = networkBridge.serverLookup(context.url);\n  var closeEvent = createCloseEvent({\n    type: 'close',\n    target: context,\n    code: code,\n    reason: reason\n  });\n\n  delay(function () {\n    networkBridge.removeWebSocket(context, context.url);\n\n    context.readyState = WebSocket$1.CLOSED;\n    context.dispatchEvent(closeEvent);\n\n    if (server) {\n      server.dispatchEvent(closeEvent, server);\n    }\n  }, context);\n}\n\nfunction failWebSocketConnection(context, code, reason) {\n  context.readyState = WebSocket$1.CLOSING;\n\n  var server = networkBridge.serverLookup(context.url);\n  var closeEvent = createCloseEvent({\n    type: 'close',\n    target: context,\n    code: code,\n    reason: reason,\n    wasClean: false\n  });\n\n  var errorEvent = createEvent({\n    type: 'error',\n    target: context\n  });\n\n  delay(function () {\n    networkBridge.removeWebSocket(context, context.url);\n\n    context.readyState = WebSocket$1.CLOSED;\n    context.dispatchEvent(errorEvent);\n    context.dispatchEvent(closeEvent);\n\n    if (server) {\n      server.dispatchEvent(closeEvent, server);\n    }\n  }, context);\n}\n\nfunction normalizeSendData(data) {\n  if (Object.prototype.toString.call(data) !== '[object Blob]' && !(data instanceof ArrayBuffer)) {\n    data = String(data);\n  }\n\n  return data;\n}\n\nfunction proxyFactory(target) {\n  var handler = {\n    get: function get(obj, prop) {\n      if (prop === 'close') {\n        return function close(options) {\n          if ( options === void 0 ) options = {};\n\n          var code = options.code || CLOSE_CODES.CLOSE_NORMAL;\n          var reason = options.reason || '';\n\n          closeWebSocketConnection(target, code, reason);\n        };\n      }\n\n      if (prop === 'send') {\n        return function send(data) {\n          data = normalizeSendData(data);\n\n          target.dispatchEvent(\n            createMessageEvent({\n              type: 'message',\n              data: data,\n              origin: this.url,\n              target: target\n            })\n          );\n        };\n      }\n\n      if (prop === 'on') {\n        return function onWrapper(type, cb) {\n          target.addEventListener((\"server::\" + type), cb);\n        };\n      }\n\n      return obj[prop];\n    }\n  };\n\n  var proxy = new Proxy(target, handler);\n  return proxy;\n}\n\nfunction lengthInUtf8Bytes(str) {\n  // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n  var m = encodeURIComponent(str).match(/%[89ABab]/g);\n  return str.length + (m ? m.length : 0);\n}\n\nfunction urlVerification(url) {\n  var urlRecord = new urlParse(url);\n  var pathname = urlRecord.pathname;\n  var protocol = urlRecord.protocol;\n  var hash = urlRecord.hash;\n\n  if (!url) {\n    throw new TypeError(((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" 1 argument required, but only 0 present.\"));\n  }\n\n  if (!pathname) {\n    urlRecord.pathname = '/';\n  }\n\n  if (protocol === '') {\n    throw new SyntaxError(((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The URL '\" + (urlRecord.toString()) + \"' is invalid.\"));\n  }\n\n  if (protocol !== 'ws:' && protocol !== 'wss:') {\n    throw new SyntaxError(\n      ((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The URL's scheme must be either 'ws' or 'wss'. '\" + protocol + \"' is not allowed.\")\n    );\n  }\n\n  if (hash !== '') {\n    /* eslint-disable max-len */\n    throw new SyntaxError(\n      ((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The URL contains a fragment identifier ('\" + hash + \"'). Fragment identifiers are not allowed in WebSocket URLs.\")\n    );\n    /* eslint-enable max-len */\n  }\n\n  return urlRecord.toString();\n}\n\nfunction protocolVerification(protocols) {\n  if ( protocols === void 0 ) protocols = [];\n\n  if (!Array.isArray(protocols) && typeof protocols !== 'string') {\n    throw new SyntaxError(((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The subprotocol '\" + (protocols.toString()) + \"' is invalid.\"));\n  }\n\n  if (typeof protocols === 'string') {\n    protocols = [protocols];\n  }\n\n  var uniq = protocols\n    .map(function (p) { return ({ count: 1, protocol: p }); })\n    .reduce(function (a, b) {\n      a[b.protocol] = (a[b.protocol] || 0) + b.count;\n      return a;\n    }, {});\n\n  var duplicates = Object.keys(uniq).filter(function (a) { return uniq[a] > 1; });\n\n  if (duplicates.length > 0) {\n    throw new SyntaxError(((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The subprotocol '\" + (duplicates[0]) + \"' is duplicated.\"));\n  }\n\n  return protocols;\n}\n\n/*\n * The main websocket class which is designed to mimick the native WebSocket class as close\n * as possible.\n *\n * https://html.spec.whatwg.org/multipage/web-sockets.html\n */\nvar WebSocket$1 = (function (EventTarget$$1) {\n  function WebSocket(url, protocols) {\n    EventTarget$$1.call(this);\n\n    this.url = urlVerification(url);\n    protocols = protocolVerification(protocols);\n    this.protocol = protocols[0] || '';\n\n    this.binaryType = 'blob';\n    this.readyState = WebSocket.CONNECTING;\n\n    var server = networkBridge.attachWebSocket(this, this.url);\n\n    /*\n     * This delay is needed so that we dont trigger an event before the callbacks have been\n     * setup. For example:\n     *\n     * var socket = new WebSocket('ws://localhost');\n     *\n     * If we dont have the delay then the event would be triggered right here and this is\n     * before the onopen had a chance to register itself.\n     *\n     * socket.onopen = () => { // this would never be called };\n     *\n     * and with the delay the event gets triggered here after all of the callbacks have been\n     * registered :-)\n     */\n    delay(function delayCallback() {\n      if (server) {\n        if (\n          server.options.verifyClient &&\n          typeof server.options.verifyClient === 'function' &&\n          !server.options.verifyClient()\n        ) {\n          this.readyState = WebSocket.CLOSED;\n\n          log(\n            'error',\n            (\"WebSocket connection to '\" + (this.url) + \"' failed: HTTP Authentication failed; no valid credentials available\")\n          );\n\n          networkBridge.removeWebSocket(this, this.url);\n          this.dispatchEvent(createEvent({ type: 'error', target: this }));\n          this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n        } else {\n          if (server.options.selectProtocol && typeof server.options.selectProtocol === 'function') {\n            var selectedProtocol = server.options.selectProtocol(protocols);\n            var isFilled = selectedProtocol !== '';\n            var isRequested = protocols.indexOf(selectedProtocol) !== -1;\n            if (isFilled && !isRequested) {\n              this.readyState = WebSocket.CLOSED;\n\n              log('error', (\"WebSocket connection to '\" + (this.url) + \"' failed: Invalid Sub-Protocol\"));\n\n              networkBridge.removeWebSocket(this, this.url);\n              this.dispatchEvent(createEvent({ type: 'error', target: this }));\n              this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n              return;\n            }\n            this.protocol = selectedProtocol;\n          }\n          this.readyState = WebSocket.OPEN;\n          this.dispatchEvent(createEvent({ type: 'open', target: this }));\n          server.dispatchEvent(createEvent({ type: 'connection' }), proxyFactory(this));\n        }\n      } else {\n        this.readyState = WebSocket.CLOSED;\n        this.dispatchEvent(createEvent({ type: 'error', target: this }));\n        this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n\n        log('error', (\"WebSocket connection to '\" + (this.url) + \"' failed\"));\n      }\n    }, this);\n  }\n\n  if ( EventTarget$$1 ) WebSocket.__proto__ = EventTarget$$1;\n  WebSocket.prototype = Object.create( EventTarget$$1 && EventTarget$$1.prototype );\n  WebSocket.prototype.constructor = WebSocket;\n\n  var prototypeAccessors = { onopen: {},onmessage: {},onclose: {},onerror: {} };\n\n  prototypeAccessors.onopen.get = function () {\n    return this.listeners.open;\n  };\n\n  prototypeAccessors.onmessage.get = function () {\n    return this.listeners.message;\n  };\n\n  prototypeAccessors.onclose.get = function () {\n    return this.listeners.close;\n  };\n\n  prototypeAccessors.onerror.get = function () {\n    return this.listeners.error;\n  };\n\n  prototypeAccessors.onopen.set = function (listener) {\n    delete this.listeners.open;\n    this.addEventListener('open', listener);\n  };\n\n  prototypeAccessors.onmessage.set = function (listener) {\n    delete this.listeners.message;\n    this.addEventListener('message', listener);\n  };\n\n  prototypeAccessors.onclose.set = function (listener) {\n    delete this.listeners.close;\n    this.addEventListener('close', listener);\n  };\n\n  prototypeAccessors.onerror.set = function (listener) {\n    delete this.listeners.error;\n    this.addEventListener('error', listener);\n  };\n\n  WebSocket.prototype.send = function send (data) {\n    var this$1 = this;\n\n    if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n      throw new Error('WebSocket is already in CLOSING or CLOSED state');\n    }\n\n    // TODO: handle bufferedAmount\n\n    var messageEvent = createMessageEvent({\n      type: 'server::message',\n      origin: this.url,\n      data: normalizeSendData(data)\n    });\n\n    var server = networkBridge.serverLookup(this.url);\n\n    if (server) {\n      delay(function () {\n        this$1.dispatchEvent(messageEvent, data);\n      }, server);\n    }\n  };\n\n  WebSocket.prototype.close = function close (code, reason) {\n    if (code !== undefined) {\n      if (typeof code !== 'number' || (code !== 1000 && (code < 3000 || code > 4999))) {\n        throw new TypeError(\n          ((ERROR_PREFIX.CLOSE_ERROR) + \" The code must be either 1000, or between 3000 and 4999. \" + code + \" is neither.\")\n        );\n      }\n    }\n\n    if (reason !== undefined) {\n      var length = lengthInUtf8Bytes(reason);\n\n      if (length > 123) {\n        throw new SyntaxError(((ERROR_PREFIX.CLOSE_ERROR) + \" The message must not be greater than 123 bytes.\"));\n      }\n    }\n\n    if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n      return;\n    }\n\n    if (this.readyState === WebSocket.CONNECTING) {\n      failWebSocketConnection(this, code || CLOSE_CODES.CLOSE_ABNORMAL, reason);\n    } else {\n      closeWebSocketConnection(this, code || CLOSE_CODES.CLOSE_NO_STATUS, reason);\n    }\n  };\n\n  Object.defineProperties( WebSocket.prototype, prototypeAccessors );\n\n  return WebSocket;\n}(EventTarget));\n\nWebSocket$1.CONNECTING = 0;\nWebSocket$1.prototype.CONNECTING = WebSocket$1.CONNECTING;\nWebSocket$1.OPEN = 1;\nWebSocket$1.prototype.OPEN = WebSocket$1.OPEN;\nWebSocket$1.CLOSING = 2;\nWebSocket$1.prototype.CLOSING = WebSocket$1.CLOSING;\nWebSocket$1.CLOSED = 3;\nWebSocket$1.prototype.CLOSED = WebSocket$1.CLOSED;\n\nvar dedupe = function (arr) { return arr.reduce(function (deduped, b) {\n    if (deduped.indexOf(b) > -1) { return deduped; }\n    return deduped.concat(b);\n  }, []); };\n\nfunction retrieveGlobalObject() {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  return typeof process === 'object' && typeof require === 'function' && typeof global === 'object' ? global : this;\n}\n\nvar Server$1 = (function (EventTarget$$1) {\n  function Server(url, options) {\n    if ( options === void 0 ) options = {};\n\n    EventTarget$$1.call(this);\n    var urlRecord = new urlParse(url);\n\n    if (!urlRecord.pathname) {\n      urlRecord.pathname = '/';\n    }\n\n    this.url = urlRecord.toString();\n\n    this.originalWebSocket = null;\n    var server = networkBridge.attachServer(this, this.url);\n\n    if (!server) {\n      this.dispatchEvent(createEvent({ type: 'error' }));\n      throw new Error('A mock server is already listening on this url');\n    }\n\n    if (typeof options.verifyClient === 'undefined') {\n      options.verifyClient = null;\n    }\n\n    if (typeof options.selectProtocol === 'undefined') {\n      options.selectProtocol = null;\n    }\n\n    this.options = options;\n    this.start();\n  }\n\n  if ( EventTarget$$1 ) Server.__proto__ = EventTarget$$1;\n  Server.prototype = Object.create( EventTarget$$1 && EventTarget$$1.prototype );\n  Server.prototype.constructor = Server;\n\n  /*\n   * Attaches the mock websocket object to the global object\n   */\n  Server.prototype.start = function start () {\n    var globalObj = retrieveGlobalObject();\n\n    if (globalObj.WebSocket) {\n      this.originalWebSocket = globalObj.WebSocket;\n    }\n\n    globalObj.WebSocket = WebSocket$1;\n  };\n\n  /*\n   * Removes the mock websocket object from the global object\n   */\n  Server.prototype.stop = function stop (callback) {\n    if ( callback === void 0 ) callback = function () {};\n\n    var globalObj = retrieveGlobalObject();\n\n    if (this.originalWebSocket) {\n      globalObj.WebSocket = this.originalWebSocket;\n    } else {\n      delete globalObj.WebSocket;\n    }\n\n    this.originalWebSocket = null;\n\n    networkBridge.removeServer(this.url);\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n  };\n\n  /*\n   * This is the main function for the mock server to subscribe to the on events.\n   *\n   * ie: mockServer.on('connection', function() { console.log('a mock client connected'); });\n   *\n   * @param {string} type - The event key to subscribe to. Valid keys are: connection, message, and close.\n   * @param {function} callback - The callback which should be called when a certain event is fired.\n   */\n  Server.prototype.on = function on (type, callback) {\n    this.addEventListener(type, callback);\n  };\n\n  /*\n   * Closes the connection and triggers the onclose method of all listening\n   * websockets. After that it removes itself from the urlMap so another server\n   * could add itself to the url.\n   *\n   * @param {object} options\n   */\n  Server.prototype.close = function close (options) {\n    if ( options === void 0 ) options = {};\n\n    var code = options.code;\n    var reason = options.reason;\n    var wasClean = options.wasClean;\n    var listeners = networkBridge.websocketsLookup(this.url);\n\n    // Remove server before notifications to prevent immediate reconnects from\n    // socket onclose handlers\n    networkBridge.removeServer(this.url);\n\n    listeners.forEach(function (socket) {\n      socket.readyState = WebSocket$1.CLOSED;\n      socket.dispatchEvent(\n        createCloseEvent({\n          type: 'close',\n          target: socket,\n          code: code || CLOSE_CODES.CLOSE_NORMAL,\n          reason: reason || '',\n          wasClean: wasClean\n        })\n      );\n    });\n\n    this.dispatchEvent(createCloseEvent({ type: 'close' }), this);\n  };\n\n  /*\n   * Sends a generic message event to all mock clients.\n   */\n  Server.prototype.emit = function emit (event, data, options) {\n    var this$1 = this;\n    if ( options === void 0 ) options = {};\n\n    var websockets = options.websockets;\n\n    if (!websockets) {\n      websockets = networkBridge.websocketsLookup(this.url);\n    }\n\n    if (typeof options !== 'object' || arguments.length > 3) {\n      data = Array.prototype.slice.call(arguments, 1, arguments.length);\n      data = data.map(function (item) { return normalizeSendData(item); });\n    } else {\n      data = normalizeSendData(data);\n    }\n\n    websockets.forEach(function (socket) {\n      if (Array.isArray(data)) {\n        socket.dispatchEvent.apply(\n          socket, [ createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket\n          }) ].concat( data )\n        );\n      } else {\n        socket.dispatchEvent(\n          createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket\n          })\n        );\n      }\n    });\n  };\n\n  /*\n   * Returns an array of websockets which are listening to this server\n   * TOOD: this should return a set and not be a method\n   */\n  Server.prototype.clients = function clients () {\n    return networkBridge.websocketsLookup(this.url);\n  };\n\n  /*\n   * Prepares a method to submit an event to members of the room\n   *\n   * e.g. server.to('my-room').emit('hi!');\n   */\n  Server.prototype.to = function to (room, broadcaster, broadcastList) {\n    var this$1 = this;\n    if ( broadcastList === void 0 ) broadcastList = [];\n\n    var self = this;\n    var websockets = dedupe(broadcastList.concat(networkBridge.websocketsLookup(this.url, room, broadcaster)));\n\n    return {\n      to: function (chainedRoom, chainedBroadcaster) { return this$1.to.call(this$1, chainedRoom, chainedBroadcaster, websockets); },\n      emit: function emit(event, data) {\n        self.emit(event, data, { websockets: websockets });\n      }\n    };\n  };\n\n  /*\n   * Alias for Server.to\n   */\n  Server.prototype.in = function in$1 () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return this.to.apply(null, args);\n  };\n\n  /*\n   * Simulate an event from the server to the clients. Useful for\n   * simulating errors.\n   */\n  Server.prototype.simulate = function simulate (event) {\n    var listeners = networkBridge.websocketsLookup(this.url);\n\n    if (event === 'error') {\n      listeners.forEach(function (socket) {\n        socket.readyState = WebSocket$1.CLOSED;\n        socket.dispatchEvent(createEvent({ type: 'error' }));\n      });\n    }\n  };\n\n  return Server;\n}(EventTarget));\n\n/*\n * Alternative constructor to support namespaces in socket.io\n *\n * http://socket.io/docs/rooms-and-namespaces/#custom-namespaces\n */\nServer$1.of = function of(url) {\n  return new Server$1(url);\n};\n\n/*\n * The socket-io class is designed to mimick the real API as closely as possible.\n *\n * http://socket.io/docs/\n */\nvar SocketIO$1 = (function (EventTarget$$1) {\n  function SocketIO(url, protocol) {\n    var this$1 = this;\n    if ( url === void 0 ) url = 'socket.io';\n    if ( protocol === void 0 ) protocol = '';\n\n    EventTarget$$1.call(this);\n\n    this.binaryType = 'blob';\n    var urlRecord = new urlParse(url);\n\n    if (!urlRecord.pathname) {\n      urlRecord.pathname = '/';\n    }\n\n    this.url = urlRecord.toString();\n    this.readyState = SocketIO.CONNECTING;\n    this.protocol = '';\n\n    if (typeof protocol === 'string' || (typeof protocol === 'object' && protocol !== null)) {\n      this.protocol = protocol;\n    } else if (Array.isArray(protocol) && protocol.length > 0) {\n      this.protocol = protocol[0];\n    }\n\n    var server = networkBridge.attachWebSocket(this, this.url);\n\n    /*\n     * Delay triggering the connection events so they can be defined in time.\n     */\n    delay(function delayCallback() {\n      if (server) {\n        this.readyState = SocketIO.OPEN;\n        server.dispatchEvent(createEvent({ type: 'connection' }), server, this);\n        server.dispatchEvent(createEvent({ type: 'connect' }), server, this); // alias\n        this.dispatchEvent(createEvent({ type: 'connect', target: this }));\n      } else {\n        this.readyState = SocketIO.CLOSED;\n        this.dispatchEvent(createEvent({ type: 'error', target: this }));\n        this.dispatchEvent(\n          createCloseEvent({\n            type: 'close',\n            target: this,\n            code: CLOSE_CODES.CLOSE_NORMAL\n          })\n        );\n\n        log('error', (\"Socket.io connection to '\" + (this.url) + \"' failed\"));\n      }\n    }, this);\n\n    /**\n      Add an aliased event listener for close / disconnect\n     */\n    this.addEventListener('close', function (event) {\n      this$1.dispatchEvent(\n        createCloseEvent({\n          type: 'disconnect',\n          target: event.target,\n          code: event.code\n        })\n      );\n    });\n  }\n\n  if ( EventTarget$$1 ) SocketIO.__proto__ = EventTarget$$1;\n  SocketIO.prototype = Object.create( EventTarget$$1 && EventTarget$$1.prototype );\n  SocketIO.prototype.constructor = SocketIO;\n\n  var prototypeAccessors = { broadcast: {} };\n\n  /*\n   * Closes the SocketIO connection or connection attempt, if any.\n   * If the connection is already CLOSED, this method does nothing.\n   */\n  SocketIO.prototype.close = function close () {\n    if (this.readyState !== SocketIO.OPEN) {\n      return undefined;\n    }\n\n    var server = networkBridge.serverLookup(this.url);\n    networkBridge.removeWebSocket(this, this.url);\n\n    this.readyState = SocketIO.CLOSED;\n    this.dispatchEvent(\n      createCloseEvent({\n        type: 'close',\n        target: this,\n        code: CLOSE_CODES.CLOSE_NORMAL\n      })\n    );\n\n    if (server) {\n      server.dispatchEvent(\n        createCloseEvent({\n          type: 'disconnect',\n          target: this,\n          code: CLOSE_CODES.CLOSE_NORMAL\n        }),\n        server\n      );\n    }\n\n    return this;\n  };\n\n  /*\n   * Alias for Socket#close\n   *\n   * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L383\n   */\n  SocketIO.prototype.disconnect = function disconnect () {\n    return this.close();\n  };\n\n  /*\n   * Submits an event to the server with a payload\n   */\n  SocketIO.prototype.emit = function emit (event) {\n    var data = [], len = arguments.length - 1;\n    while ( len-- > 0 ) data[ len ] = arguments[ len + 1 ];\n\n    if (this.readyState !== SocketIO.OPEN) {\n      throw new Error('SocketIO is already in CLOSING or CLOSED state');\n    }\n\n    var messageEvent = createMessageEvent({\n      type: event,\n      origin: this.url,\n      data: data\n    });\n\n    var server = networkBridge.serverLookup(this.url);\n\n    if (server) {\n      server.dispatchEvent.apply(server, [ messageEvent ].concat( data ));\n    }\n\n    return this;\n  };\n\n  /*\n   * Submits a 'message' event to the server.\n   *\n   * Should behave exactly like WebSocket#send\n   *\n   * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L113\n   */\n  SocketIO.prototype.send = function send (data) {\n    this.emit('message', data);\n    return this;\n  };\n\n  /*\n   * For broadcasting events to other connected sockets.\n   *\n   * e.g. socket.broadcast.emit('hi!');\n   * e.g. socket.broadcast.to('my-room').emit('hi!');\n   */\n  prototypeAccessors.broadcast.get = function () {\n    if (this.readyState !== SocketIO.OPEN) {\n      throw new Error('SocketIO is already in CLOSING or CLOSED state');\n    }\n\n    var self = this;\n    var server = networkBridge.serverLookup(this.url);\n    if (!server) {\n      throw new Error((\"SocketIO can not find a server at the specified URL (\" + (this.url) + \")\"));\n    }\n\n    return {\n      emit: function emit(event, data) {\n        server.emit(event, data, { websockets: networkBridge.websocketsLookup(self.url, null, self) });\n        return self;\n      },\n      to: function to(room) {\n        return server.to(room, self);\n      },\n      in: function in$1(room) {\n        return server.in(room, self);\n      }\n    };\n  };\n\n  /*\n   * For registering events to be received from the server\n   */\n  SocketIO.prototype.on = function on (type, callback) {\n    this.addEventListener(type, callback);\n    return this;\n  };\n\n  /*\n   * Remove event listener\n   *\n   * https://github.com/component/emitter#emitteroffevent-fn\n   */\n  SocketIO.prototype.off = function off (type, callback) {\n    this.removeEventListener(type, callback);\n  };\n\n  /*\n   * Check if listeners have already been added for an event\n   *\n   * https://github.com/component/emitter#emitterhaslistenersevent\n   */\n  SocketIO.prototype.hasListeners = function hasListeners (type) {\n    var listeners = this.listeners[type];\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n    return !!listeners.length;\n  };\n\n  /*\n   * Join a room on a server\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n   */\n  SocketIO.prototype.join = function join (room) {\n    networkBridge.addMembershipToRoom(this, room);\n  };\n\n  /*\n   * Get the websocket to leave the room\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n   */\n  SocketIO.prototype.leave = function leave (room) {\n    networkBridge.removeMembershipFromRoom(this, room);\n  };\n\n  SocketIO.prototype.to = function to (room) {\n    return this.broadcast.to(room);\n  };\n\n  SocketIO.prototype.in = function in$1 () {\n    return this.to.apply(null, arguments);\n  };\n\n  /*\n   * Invokes all listener functions that are listening to the given event.type property. Each\n   * listener will be passed the event as the first argument.\n   *\n   * @param {object} event - event object which will be passed to all listeners of the event.type property\n   */\n  SocketIO.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n    var customArguments = [], len = arguments.length - 1;\n    while ( len-- > 0 ) customArguments[ len ] = arguments[ len + 1 ];\n\n    var eventName = event.type;\n    var listeners = this.listeners[eventName];\n\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n\n    listeners.forEach(function (listener) {\n      if (customArguments.length > 0) {\n        listener.apply(this$1, customArguments);\n      } else {\n        // Regular WebSockets expect a MessageEvent but Socketio.io just wants raw data\n        //  payload instanceof MessageEvent works, but you can't isntance of NodeEvent\n        //  for now we detect if the output has data defined on it\n        listener.call(this$1, event.data ? event.data : event);\n      }\n    });\n  };\n\n  Object.defineProperties( SocketIO.prototype, prototypeAccessors );\n\n  return SocketIO;\n}(EventTarget));\n\nSocketIO$1.CONNECTING = 0;\nSocketIO$1.OPEN = 1;\nSocketIO$1.CLOSING = 2;\nSocketIO$1.CLOSED = 3;\n\n/*\n * Static constructor methods for the IO Socket\n */\nvar IO = function ioConstructor(url, protocol) {\n  return new SocketIO$1(url, protocol);\n};\n\n/*\n * Alias the raw IO() constructor\n */\nIO.connect = function ioConnect(url, protocol) {\n  /* eslint-disable new-cap */\n  return IO(url, protocol);\n  /* eslint-enable new-cap */\n};\n\nvar Server = Server$1;\nvar WebSocket = WebSocket$1;\nvar SocketIO = IO;\n\nexports.Server = Server;\nexports.WebSocket = WebSocket;\nexports.SocketIO = SocketIO;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"script"}