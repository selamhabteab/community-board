"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
exports.__esModule = true;
exports.removeInternalProperties = void 0;
var glossary_1 = require("../glossary");
var isInternalEntity_1 = require("./isInternalEntity");
function isOneOfRelation(value) {
    return typeof value === 'object' && isInternalEntity_1.isInternalEntity(value);
}
function isManyOfRelation(value) {
    return Array.isArray(value) && value.every(isInternalEntity_1.isInternalEntity);
}
/**
 * Removes internal properties from the given entity.
 */
function removeInternalProperties(entity) {
    return Object.entries(entity).reduce(function (entity, _a) {
        var _b = __read(_a, 2), property = _b[0], value = _b[1];
        // Remove the internal entity properties.
        if (property === glossary_1.InternalEntityProperty.type ||
            property === glossary_1.InternalEntityProperty.primaryKey) {
            return entity;
        }
        // Remove the internal properties of a "oneOf" relation.
        if (isOneOfRelation(value)) {
            var relationalEntity = removeInternalProperties(value);
            entity[property] = relationalEntity;
            return entity;
        }
        // Remove the internal properties of a "manyOf" relation.
        if (isManyOfRelation(value)) {
            var relationalEntityList = value.map(removeInternalProperties);
            entity[property] = relationalEntityList;
            return entity;
        }
        // Otherwise dealing with a base type value, preserving.
        entity[property] = value;
        return entity;
    }, {});
}
exports.removeInternalProperties = removeInternalProperties;
